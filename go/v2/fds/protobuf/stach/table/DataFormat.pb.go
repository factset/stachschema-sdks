// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: fds/protobuf/stach/table/DataFormat.proto

package table

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A data format
type DataFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The format
	Format string `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	// The null format
	NullFormat string `protobuf:"bytes,2,opt,name=null_format,json=nullFormat,proto3" json:"null_format,omitempty"`
	// The horizontal alignment
	Halign HorizontalAlignment `protobuf:"varint,3,opt,name=halign,proto3,enum=factset.protobuf.stach.table.HorizontalAlignment" json:"halign,omitempty"`
	// The vertical alignment
	Valign VerticalAlignment `protobuf:"varint,4,opt,name=valign,proto3,enum=factset.protobuf.stach.table.VerticalAlignment" json:"valign,omitempty"`
}

func (x *DataFormat) Reset() {
	*x = DataFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fds_protobuf_stach_table_DataFormat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFormat) ProtoMessage() {}

func (x *DataFormat) ProtoReflect() protoreflect.Message {
	mi := &file_fds_protobuf_stach_table_DataFormat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFormat.ProtoReflect.Descriptor instead.
func (*DataFormat) Descriptor() ([]byte, []int) {
	return file_fds_protobuf_stach_table_DataFormat_proto_rawDescGZIP(), []int{0}
}

func (x *DataFormat) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *DataFormat) GetNullFormat() string {
	if x != nil {
		return x.NullFormat
	}
	return ""
}

func (x *DataFormat) GetHalign() HorizontalAlignment {
	if x != nil {
		return x.Halign
	}
	return HorizontalAlignment_UNKNOWN_HALIGN
}

func (x *DataFormat) GetValign() VerticalAlignment {
	if x != nil {
		return x.Valign
	}
	return VerticalAlignment_UNKNOWN_VALIGN
}

var File_fds_protobuf_stach_table_DataFormat_proto protoreflect.FileDescriptor

var file_fds_protobuf_stach_table_DataFormat_proto_rawDesc = []byte{
	0x0a, 0x29, 0x66, 0x64, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x61, 0x63, 0x68, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x74,
	0x61, 0x63, 0x68, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x32, 0x66, 0x64, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x68, 0x2f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x41, 0x6c,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x66,
	0x64, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x61, 0x63,
	0x68, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd9, 0x01, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x75, 0x6c,
	0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x49, 0x0a, 0x06, 0x68, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x73, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x68,
	0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61,
	0x6c, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x68, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x12, 0x47, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x68, 0x2e, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x42, 0x91, 0x01, 0x0a, 0x20,
	0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x61, 0x63, 0x74, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x68, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x65, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x68, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x66, 0x64, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x68, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0xaa, 0x02, 0x1c, 0x46, 0x61, 0x63, 0x74, 0x53, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x68, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fds_protobuf_stach_table_DataFormat_proto_rawDescOnce sync.Once
	file_fds_protobuf_stach_table_DataFormat_proto_rawDescData = file_fds_protobuf_stach_table_DataFormat_proto_rawDesc
)

func file_fds_protobuf_stach_table_DataFormat_proto_rawDescGZIP() []byte {
	file_fds_protobuf_stach_table_DataFormat_proto_rawDescOnce.Do(func() {
		file_fds_protobuf_stach_table_DataFormat_proto_rawDescData = protoimpl.X.CompressGZIP(file_fds_protobuf_stach_table_DataFormat_proto_rawDescData)
	})
	return file_fds_protobuf_stach_table_DataFormat_proto_rawDescData
}

var file_fds_protobuf_stach_table_DataFormat_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_fds_protobuf_stach_table_DataFormat_proto_goTypes = []interface{}{
	(*DataFormat)(nil),       // 0: factset.protobuf.stach.table.DataFormat
	(HorizontalAlignment)(0), // 1: factset.protobuf.stach.table.HorizontalAlignment
	(VerticalAlignment)(0),   // 2: factset.protobuf.stach.table.VerticalAlignment
}
var file_fds_protobuf_stach_table_DataFormat_proto_depIdxs = []int32{
	1, // 0: factset.protobuf.stach.table.DataFormat.halign:type_name -> factset.protobuf.stach.table.HorizontalAlignment
	2, // 1: factset.protobuf.stach.table.DataFormat.valign:type_name -> factset.protobuf.stach.table.VerticalAlignment
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_fds_protobuf_stach_table_DataFormat_proto_init() }
func file_fds_protobuf_stach_table_DataFormat_proto_init() {
	if File_fds_protobuf_stach_table_DataFormat_proto != nil {
		return
	}
	file_fds_protobuf_stach_table_HorizontalAlignment_proto_init()
	file_fds_protobuf_stach_table_VerticalAlignment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fds_protobuf_stach_table_DataFormat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fds_protobuf_stach_table_DataFormat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fds_protobuf_stach_table_DataFormat_proto_goTypes,
		DependencyIndexes: file_fds_protobuf_stach_table_DataFormat_proto_depIdxs,
		MessageInfos:      file_fds_protobuf_stach_table_DataFormat_proto_msgTypes,
	}.Build()
	File_fds_protobuf_stach_table_DataFormat_proto = out.File
	file_fds_protobuf_stach_table_DataFormat_proto_rawDesc = nil
	file_fds_protobuf_stach_table_DataFormat_proto_goTypes = nil
	file_fds_protobuf_stach_table_DataFormat_proto_depIdxs = nil
}
