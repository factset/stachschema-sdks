// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fds/protobuf/stach/v3/TableView.proto

package com.factset.protobuf.stach.v3;

public final class TableViewProto {
  private TableViewProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TableViewOrBuilder extends
      // @@protoc_insertion_point(interface_extends:factset.protobuf.stach.v3.TableView)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *The human readable display name for the table.
     *Optional.
     * </pre>
     *
     * <code>string display_name = 1;</code>
     * @return The displayName.
     */
    java.lang.String getDisplayName();
    /**
     * <pre>
     *The human readable display name for the table.
     *Optional.
     * </pre>
     *
     * <code>string display_name = 1;</code>
     * @return The bytes for displayName.
     */
    com.google.protobuf.ByteString
        getDisplayNameBytes();

    /**
     * <pre>
     *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
     *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
     *Required.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @return A list containing the columns.
     */
    java.util.List<java.lang.String>
        getColumnsList();
    /**
     * <pre>
     *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
     *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
     *Required.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @return The count of columns.
     */
    int getColumnsCount();
    /**
     * <pre>
     *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
     *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
     *Required.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @param index The index of the element to return.
     * @return The columns at the given index.
     */
    java.lang.String getColumns(int index);
    /**
     * <pre>
     *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
     *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
     *Required.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the columns at the given index.
     */
    com.google.protobuf.ByteString
        getColumnsBytes(int index);

    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */
    int getHeadersCount();
    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */
    boolean containsHeaders(
        java.lang.String key);
    /**
     * Use {@link #getHeadersMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getHeaders();
    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getHeadersMap();
    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */

    java.lang.String getHeadersOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */

    java.lang.String getHeadersOrThrow(
        java.lang.String key);

    /**
     * <pre>
     *The group algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
     * @return Whether the group field is set.
     */
    boolean hasGroup();
    /**
     * <pre>
     *The group algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
     * @return The group.
     */
    com.factset.protobuf.stach.v3.TableViewProto.TableView.Group getGroup();
    /**
     * <pre>
     *The group algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
     */
    com.factset.protobuf.stach.v3.TableViewProto.TableView.GroupOrBuilder getGroupOrBuilder();

    /**
     * <pre>
     *The split algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
     * @return Whether the split field is set.
     */
    boolean hasSplit();
    /**
     * <pre>
     *The split algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
     * @return The split.
     */
    com.factset.protobuf.stach.v3.TableViewProto.TableView.Split getSplit();
    /**
     * <pre>
     *The split algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
     */
    com.factset.protobuf.stach.v3.TableViewProto.TableView.SplitOrBuilder getSplitOrBuilder();

    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */
    int getCustomMetadataCount();
    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */
    boolean containsCustomMetadata(
        java.lang.String key);
    /**
     * Use {@link #getCustomMetadataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>
    getCustomMetadata();
    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */
    java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>
    getCustomMetadataMap();
    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */

    com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem getCustomMetadataOrDefault(
        java.lang.String key,
        com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem defaultValue);
    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */

    com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem getCustomMetadataOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   *A set of metadata specifying the settings that instruct how to turn tabular data into a rendered table.
   * </pre>
   *
   * Protobuf type {@code factset.protobuf.stach.v3.TableView}
   */
  public static final class TableView extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:factset.protobuf.stach.v3.TableView)
      TableViewOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TableView.newBuilder() to construct.
    private TableView(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TableView() {
      displayName_ = "";
      columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TableView();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TableView(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              displayName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                columns_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              columns_.add(s);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                headers_ = com.google.protobuf.MapField.newMapField(
                    HeadersDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              headers__ = input.readMessage(
                  HeadersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              headers_.getMutableMap().put(
                  headers__.getKey(), headers__.getValue());
              break;
            }
            case 34: {
              com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.Builder subBuilder = null;
              if (group_ != null) {
                subBuilder = group_.toBuilder();
              }
              group_ = input.readMessage(com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(group_);
                group_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.Builder subBuilder = null;
              if (split_ != null) {
                subBuilder = split_.toBuilder();
              }
              split_ = input.readMessage(com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(split_);
                split_ = subBuilder.buildPartial();
              }

              break;
            }
            case 802: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                customMetadata_ = com.google.protobuf.MapField.newMapField(
                    CustomMetadataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>
              customMetadata__ = input.readMessage(
                  CustomMetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              customMetadata_.getMutableMap().put(
                  customMetadata__.getKey(), customMetadata__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          columns_ = columns_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetHeaders();
        case 100:
          return internalGetCustomMetadata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.factset.protobuf.stach.v3.TableViewProto.TableView.class, com.factset.protobuf.stach.v3.TableViewProto.TableView.Builder.class);
    }

    public interface GroupOrBuilder extends
        // @@protoc_insertion_point(interface_extends:factset.protobuf.stach.v3.TableView.Group)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *The names of the columns to group by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 1;</code>
       * @return A list containing the by.
       */
      java.util.List<java.lang.String>
          getByList();
      /**
       * <pre>
       *The names of the columns to group by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 1;</code>
       * @return The count of by.
       */
      int getByCount();
      /**
       * <pre>
       *The names of the columns to group by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 1;</code>
       * @param index The index of the element to return.
       * @return The by at the given index.
       */
      java.lang.String getBy(int index);
      /**
       * <pre>
       *The names of the columns to group by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the by at the given index.
       */
      com.google.protobuf.ByteString
          getByBytes(int index);

      /**
       * <pre>
       *The settings for the algorithm to create a collapsed column.
       *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
       * @return Whether the collapsedColumn field is set.
       */
      boolean hasCollapsedColumn();
      /**
       * <pre>
       *The settings for the algorithm to create a collapsed column.
       *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
       * @return The collapsedColumn.
       */
      com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn getCollapsedColumn();
      /**
       * <pre>
       *The settings for the algorithm to create a collapsed column.
       *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
       */
      com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumnOrBuilder getCollapsedColumnOrBuilder();
    }
    /**
     * <pre>
     *An algorithm that groups tabular data by a set of columns and produces aggregate rows.
     * </pre>
     *
     * Protobuf type {@code factset.protobuf.stach.v3.TableView.Group}
     */
    public static final class Group extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:factset.protobuf.stach.v3.TableView.Group)
        GroupOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Group.newBuilder() to construct.
      private Group(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Group() {
        by_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Group();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Group(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  by_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                by_.add(s);
                break;
              }
              case 18: {
                com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.Builder subBuilder = null;
                if (collapsedColumn_ != null) {
                  subBuilder = collapsedColumn_.toBuilder();
                }
                collapsedColumn_ = input.readMessage(com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(collapsedColumn_);
                  collapsedColumn_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            by_ = by_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Group_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Group_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.class, com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.Builder.class);
      }

      public static final int BY_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList by_;
      /**
       * <pre>
       *The names of the columns to group by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 1;</code>
       * @return A list containing the by.
       */
      public com.google.protobuf.ProtocolStringList
          getByList() {
        return by_;
      }
      /**
       * <pre>
       *The names of the columns to group by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 1;</code>
       * @return The count of by.
       */
      public int getByCount() {
        return by_.size();
      }
      /**
       * <pre>
       *The names of the columns to group by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 1;</code>
       * @param index The index of the element to return.
       * @return The by at the given index.
       */
      public java.lang.String getBy(int index) {
        return by_.get(index);
      }
      /**
       * <pre>
       *The names of the columns to group by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the by at the given index.
       */
      public com.google.protobuf.ByteString
          getByBytes(int index) {
        return by_.getByteString(index);
      }

      public static final int COLLAPSED_COLUMN_FIELD_NUMBER = 2;
      private com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn collapsedColumn_;
      /**
       * <pre>
       *The settings for the algorithm to create a collapsed column.
       *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
       * @return Whether the collapsedColumn field is set.
       */
      @java.lang.Override
      public boolean hasCollapsedColumn() {
        return collapsedColumn_ != null;
      }
      /**
       * <pre>
       *The settings for the algorithm to create a collapsed column.
       *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
       * @return The collapsedColumn.
       */
      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn getCollapsedColumn() {
        return collapsedColumn_ == null ? com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.getDefaultInstance() : collapsedColumn_;
      }
      /**
       * <pre>
       *The settings for the algorithm to create a collapsed column.
       *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
       */
      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumnOrBuilder getCollapsedColumnOrBuilder() {
        return getCollapsedColumn();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < by_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, by_.getRaw(i));
        }
        if (collapsedColumn_ != null) {
          output.writeMessage(2, getCollapsedColumn());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < by_.size(); i++) {
            dataSize += computeStringSizeNoTag(by_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getByList().size();
        }
        if (collapsedColumn_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getCollapsedColumn());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.factset.protobuf.stach.v3.TableViewProto.TableView.Group)) {
          return super.equals(obj);
        }
        com.factset.protobuf.stach.v3.TableViewProto.TableView.Group other = (com.factset.protobuf.stach.v3.TableViewProto.TableView.Group) obj;

        if (!getByList()
            .equals(other.getByList())) return false;
        if (hasCollapsedColumn() != other.hasCollapsedColumn()) return false;
        if (hasCollapsedColumn()) {
          if (!getCollapsedColumn()
              .equals(other.getCollapsedColumn())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getByCount() > 0) {
          hash = (37 * hash) + BY_FIELD_NUMBER;
          hash = (53 * hash) + getByList().hashCode();
        }
        if (hasCollapsedColumn()) {
          hash = (37 * hash) + COLLAPSED_COLUMN_FIELD_NUMBER;
          hash = (53 * hash) + getCollapsedColumn().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.factset.protobuf.stach.v3.TableViewProto.TableView.Group prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *An algorithm that groups tabular data by a set of columns and produces aggregate rows.
       * </pre>
       *
       * Protobuf type {@code factset.protobuf.stach.v3.TableView.Group}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:factset.protobuf.stach.v3.TableView.Group)
          com.factset.protobuf.stach.v3.TableViewProto.TableView.GroupOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Group_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Group_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.class, com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.Builder.class);
        }

        // Construct using com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          by_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (collapsedColumnBuilder_ == null) {
            collapsedColumn_ = null;
          } else {
            collapsedColumn_ = null;
            collapsedColumnBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Group_descriptor;
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.Group getDefaultInstanceForType() {
          return com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.getDefaultInstance();
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.Group build() {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Group result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.Group buildPartial() {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Group result = new com.factset.protobuf.stach.v3.TableViewProto.TableView.Group(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            by_ = by_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.by_ = by_;
          if (collapsedColumnBuilder_ == null) {
            result.collapsedColumn_ = collapsedColumn_;
          } else {
            result.collapsedColumn_ = collapsedColumnBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.factset.protobuf.stach.v3.TableViewProto.TableView.Group) {
            return mergeFrom((com.factset.protobuf.stach.v3.TableViewProto.TableView.Group)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.factset.protobuf.stach.v3.TableViewProto.TableView.Group other) {
          if (other == com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.getDefaultInstance()) return this;
          if (!other.by_.isEmpty()) {
            if (by_.isEmpty()) {
              by_ = other.by_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureByIsMutable();
              by_.addAll(other.by_);
            }
            onChanged();
          }
          if (other.hasCollapsedColumn()) {
            mergeCollapsedColumn(other.getCollapsedColumn());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Group parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.factset.protobuf.stach.v3.TableViewProto.TableView.Group) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList by_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureByIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            by_ = new com.google.protobuf.LazyStringArrayList(by_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @return A list containing the by.
         */
        public com.google.protobuf.ProtocolStringList
            getByList() {
          return by_.getUnmodifiableView();
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @return The count of by.
         */
        public int getByCount() {
          return by_.size();
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @param index The index of the element to return.
         * @return The by at the given index.
         */
        public java.lang.String getBy(int index) {
          return by_.get(index);
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @param index The index of the value to return.
         * @return The bytes of the by at the given index.
         */
        public com.google.protobuf.ByteString
            getByBytes(int index) {
          return by_.getByteString(index);
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @param index The index to set the value at.
         * @param value The by to set.
         * @return This builder for chaining.
         */
        public Builder setBy(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureByIsMutable();
          by_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @param value The by to add.
         * @return This builder for chaining.
         */
        public Builder addBy(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureByIsMutable();
          by_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @param values The by to add.
         * @return This builder for chaining.
         */
        public Builder addAllBy(
            java.lang.Iterable<java.lang.String> values) {
          ensureByIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, by_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearBy() {
          by_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of the columns to group by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 1;</code>
         * @param value The bytes of the by to add.
         * @return This builder for chaining.
         */
        public Builder addByBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureByIsMutable();
          by_.add(value);
          onChanged();
          return this;
        }

        private com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn collapsedColumn_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn, com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumnOrBuilder> collapsedColumnBuilder_;
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         * @return Whether the collapsedColumn field is set.
         */
        public boolean hasCollapsedColumn() {
          return collapsedColumnBuilder_ != null || collapsedColumn_ != null;
        }
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         * @return The collapsedColumn.
         */
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn getCollapsedColumn() {
          if (collapsedColumnBuilder_ == null) {
            return collapsedColumn_ == null ? com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.getDefaultInstance() : collapsedColumn_;
          } else {
            return collapsedColumnBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         */
        public Builder setCollapsedColumn(com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn value) {
          if (collapsedColumnBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            collapsedColumn_ = value;
            onChanged();
          } else {
            collapsedColumnBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         */
        public Builder setCollapsedColumn(
            com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.Builder builderForValue) {
          if (collapsedColumnBuilder_ == null) {
            collapsedColumn_ = builderForValue.build();
            onChanged();
          } else {
            collapsedColumnBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         */
        public Builder mergeCollapsedColumn(com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn value) {
          if (collapsedColumnBuilder_ == null) {
            if (collapsedColumn_ != null) {
              collapsedColumn_ =
                com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.newBuilder(collapsedColumn_).mergeFrom(value).buildPartial();
            } else {
              collapsedColumn_ = value;
            }
            onChanged();
          } else {
            collapsedColumnBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         */
        public Builder clearCollapsedColumn() {
          if (collapsedColumnBuilder_ == null) {
            collapsedColumn_ = null;
            onChanged();
          } else {
            collapsedColumn_ = null;
            collapsedColumnBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         */
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.Builder getCollapsedColumnBuilder() {
          
          onChanged();
          return getCollapsedColumnFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         */
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumnOrBuilder getCollapsedColumnOrBuilder() {
          if (collapsedColumnBuilder_ != null) {
            return collapsedColumnBuilder_.getMessageOrBuilder();
          } else {
            return collapsedColumn_ == null ?
                com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.getDefaultInstance() : collapsedColumn_;
          }
        }
        /**
         * <pre>
         *The settings for the algorithm to create a collapsed column.
         *The rendering layer should collapse the columns specified by `Group.by` or `GroupResult.by` into a collapsed column.
         *Optional.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView.CollapsedColumn collapsed_column = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn, com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumnOrBuilder> 
            getCollapsedColumnFieldBuilder() {
          if (collapsedColumnBuilder_ == null) {
            collapsedColumnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn, com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumnOrBuilder>(
                    getCollapsedColumn(),
                    getParentForChildren(),
                    isClean());
            collapsedColumn_ = null;
          }
          return collapsedColumnBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:factset.protobuf.stach.v3.TableView.Group)
      }

      // @@protoc_insertion_point(class_scope:factset.protobuf.stach.v3.TableView.Group)
      private static final com.factset.protobuf.stach.v3.TableViewProto.TableView.Group DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.factset.protobuf.stach.v3.TableViewProto.TableView.Group();
      }

      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Group getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Group>
          PARSER = new com.google.protobuf.AbstractParser<Group>() {
        @java.lang.Override
        public Group parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Group(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Group> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Group> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.Group getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CollapsedColumnOrBuilder extends
        // @@protoc_insertion_point(interface_extends:factset.protobuf.stach.v3.TableView.CollapsedColumn)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *The alias of the collapsed column.
       *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
       *Required.
       * </pre>
       *
       * <code>string alias = 1;</code>
       * @return The alias.
       */
      java.lang.String getAlias();
      /**
       * <pre>
       *The alias of the collapsed column.
       *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
       *Required.
       * </pre>
       *
       * <code>string alias = 1;</code>
       * @return The bytes for alias.
       */
      com.google.protobuf.ByteString
          getAliasBytes();
    }
    /**
     * <pre>
     *A virtual collapsed column.
     * </pre>
     *
     * Protobuf type {@code factset.protobuf.stach.v3.TableView.CollapsedColumn}
     */
    public static final class CollapsedColumn extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:factset.protobuf.stach.v3.TableView.CollapsedColumn)
        CollapsedColumnOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CollapsedColumn.newBuilder() to construct.
      private CollapsedColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CollapsedColumn() {
        alias_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CollapsedColumn();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CollapsedColumn(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                alias_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.class, com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.Builder.class);
      }

      public static final int ALIAS_FIELD_NUMBER = 1;
      private volatile java.lang.Object alias_;
      /**
       * <pre>
       *The alias of the collapsed column.
       *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
       *Required.
       * </pre>
       *
       * <code>string alias = 1;</code>
       * @return The alias.
       */
      @java.lang.Override
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          alias_ = s;
          return s;
        }
      }
      /**
       * <pre>
       *The alias of the collapsed column.
       *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
       *Required.
       * </pre>
       *
       * <code>string alias = 1;</code>
       * @return The bytes for alias.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getAliasBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, alias_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getAliasBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, alias_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn)) {
          return super.equals(obj);
        }
        com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn other = (com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn) obj;

        if (!getAlias()
            .equals(other.getAlias())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *A virtual collapsed column.
       * </pre>
       *
       * Protobuf type {@code factset.protobuf.stach.v3.TableView.CollapsedColumn}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:factset.protobuf.stach.v3.TableView.CollapsedColumn)
          com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumnOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.class, com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.Builder.class);
        }

        // Construct using com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          alias_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_descriptor;
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn getDefaultInstanceForType() {
          return com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.getDefaultInstance();
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn build() {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn buildPartial() {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn result = new com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn(this);
          result.alias_ = alias_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn) {
            return mergeFrom((com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn other) {
          if (other == com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn.getDefaultInstance()) return this;
          if (!other.getAlias().isEmpty()) {
            alias_ = other.alias_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object alias_ = "";
        /**
         * <pre>
         *The alias of the collapsed column.
         *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @return The alias.
         */
        public java.lang.String getAlias() {
          java.lang.Object ref = alias_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            alias_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         *The alias of the collapsed column.
         *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @return The bytes for alias.
         */
        public com.google.protobuf.ByteString
            getAliasBytes() {
          java.lang.Object ref = alias_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            alias_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *The alias of the collapsed column.
         *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @param value The alias to set.
         * @return This builder for chaining.
         */
        public Builder setAlias(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          alias_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The alias of the collapsed column.
         *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAlias() {
          
          alias_ = getDefaultInstance().getAlias();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The alias of the collapsed column.
         *The collapsed column is *not* in the data so it is considered virtual and therefore needs an alias. A dollar sign ($) prefix, such as "$collapsedColumn", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @param value The bytes for alias to set.
         * @return This builder for chaining.
         */
        public Builder setAliasBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          alias_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:factset.protobuf.stach.v3.TableView.CollapsedColumn)
      }

      // @@protoc_insertion_point(class_scope:factset.protobuf.stach.v3.TableView.CollapsedColumn)
      private static final com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn();
      }

      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CollapsedColumn>
          PARSER = new com.google.protobuf.AbstractParser<CollapsedColumn>() {
        @java.lang.Override
        public CollapsedColumn parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CollapsedColumn(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CollapsedColumn> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CollapsedColumn> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.CollapsedColumn getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SplitOrBuilder extends
        // @@protoc_insertion_point(interface_extends:factset.protobuf.stach.v3.TableView.Split)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *The alias of the columns generated by the split algorithm.
       *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
       *Required.
       * </pre>
       *
       * <code>string alias = 1;</code>
       * @return The alias.
       */
      java.lang.String getAlias();
      /**
       * <pre>
       *The alias of the columns generated by the split algorithm.
       *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
       *Required.
       * </pre>
       *
       * <code>string alias = 1;</code>
       * @return The bytes for alias.
       */
      com.google.protobuf.ByteString
          getAliasBytes();

      /**
       * <pre>
       *The names of columns to split by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 2;</code>
       * @return A list containing the by.
       */
      java.util.List<java.lang.String>
          getByList();
      /**
       * <pre>
       *The names of columns to split by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 2;</code>
       * @return The count of by.
       */
      int getByCount();
      /**
       * <pre>
       *The names of columns to split by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 2;</code>
       * @param index The index of the element to return.
       * @return The by at the given index.
       */
      java.lang.String getBy(int index);
      /**
       * <pre>
       *The names of columns to split by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the by at the given index.
       */
      com.google.protobuf.ByteString
          getByBytes(int index);

      /**
       * <pre>
       *The names of columns to include in the multi-level headers table when splitting.
       *Optional.
       * </pre>
       *
       * <code>repeated string include = 3;</code>
       * @return A list containing the include.
       */
      java.util.List<java.lang.String>
          getIncludeList();
      /**
       * <pre>
       *The names of columns to include in the multi-level headers table when splitting.
       *Optional.
       * </pre>
       *
       * <code>repeated string include = 3;</code>
       * @return The count of include.
       */
      int getIncludeCount();
      /**
       * <pre>
       *The names of columns to include in the multi-level headers table when splitting.
       *Optional.
       * </pre>
       *
       * <code>repeated string include = 3;</code>
       * @param index The index of the element to return.
       * @return The include at the given index.
       */
      java.lang.String getInclude(int index);
      /**
       * <pre>
       *The names of columns to include in the multi-level headers table when splitting.
       *Optional.
       * </pre>
       *
       * <code>repeated string include = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the include at the given index.
       */
      com.google.protobuf.ByteString
          getIncludeBytes(int index);

      /**
       * <pre>
       *The names of columns to split over.
       *Required.
       * </pre>
       *
       * <code>repeated string over = 4;</code>
       * @return A list containing the over.
       */
      java.util.List<java.lang.String>
          getOverList();
      /**
       * <pre>
       *The names of columns to split over.
       *Required.
       * </pre>
       *
       * <code>repeated string over = 4;</code>
       * @return The count of over.
       */
      int getOverCount();
      /**
       * <pre>
       *The names of columns to split over.
       *Required.
       * </pre>
       *
       * <code>repeated string over = 4;</code>
       * @param index The index of the element to return.
       * @return The over at the given index.
       */
      java.lang.String getOver(int index);
      /**
       * <pre>
       *The names of columns to split over.
       *Required.
       * </pre>
       *
       * <code>repeated string over = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the over at the given index.
       */
      com.google.protobuf.ByteString
          getOverBytes(int index);

      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */
      int getHeadersCount();
      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */
      boolean containsHeaders(
          java.lang.String key);
      /**
       * Use {@link #getHeadersMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getHeaders();
      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getHeadersMap();
      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */

      java.lang.String getHeadersOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */

      java.lang.String getHeadersOrThrow(
          java.lang.String key);

      /**
       * <pre>
       *Whether to remove empty split columns or not.
       *Default is `false`.
       *Optional.
       * </pre>
       *
       * <code>bool remove_empty_split_columns = 6;</code>
       * @return The removeEmptySplitColumns.
       */
      boolean getRemoveEmptySplitColumns();
    }
    /**
     * <pre>
     *An algorithm that vertically splits tabular data and produces a column for each unique value in the columns that were split over.
     * </pre>
     *
     * Protobuf type {@code factset.protobuf.stach.v3.TableView.Split}
     */
    public static final class Split extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:factset.protobuf.stach.v3.TableView.Split)
        SplitOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Split.newBuilder() to construct.
      private Split(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Split() {
        alias_ = "";
        by_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        include_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        over_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Split();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Split(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                alias_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  by_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                by_.add(s);
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  include_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000002;
                }
                include_.add(s);
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                  over_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000004;
                }
                over_.add(s);
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                  headers_ = com.google.protobuf.MapField.newMapField(
                      HeadersDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000008;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                headers__ = input.readMessage(
                    HeadersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                headers_.getMutableMap().put(
                    headers__.getKey(), headers__.getValue());
                break;
              }
              case 48: {

                removeEmptySplitColumns_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            by_ = by_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            include_ = include_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000004) != 0)) {
            over_ = over_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Split_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetHeaders();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Split_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.class, com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.Builder.class);
      }

      public static final int ALIAS_FIELD_NUMBER = 1;
      private volatile java.lang.Object alias_;
      /**
       * <pre>
       *The alias of the columns generated by the split algorithm.
       *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
       *Required.
       * </pre>
       *
       * <code>string alias = 1;</code>
       * @return The alias.
       */
      @java.lang.Override
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          alias_ = s;
          return s;
        }
      }
      /**
       * <pre>
       *The alias of the columns generated by the split algorithm.
       *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
       *Required.
       * </pre>
       *
       * <code>string alias = 1;</code>
       * @return The bytes for alias.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BY_FIELD_NUMBER = 2;
      private com.google.protobuf.LazyStringList by_;
      /**
       * <pre>
       *The names of columns to split by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 2;</code>
       * @return A list containing the by.
       */
      public com.google.protobuf.ProtocolStringList
          getByList() {
        return by_;
      }
      /**
       * <pre>
       *The names of columns to split by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 2;</code>
       * @return The count of by.
       */
      public int getByCount() {
        return by_.size();
      }
      /**
       * <pre>
       *The names of columns to split by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 2;</code>
       * @param index The index of the element to return.
       * @return The by at the given index.
       */
      public java.lang.String getBy(int index) {
        return by_.get(index);
      }
      /**
       * <pre>
       *The names of columns to split by.
       *Required.
       * </pre>
       *
       * <code>repeated string by = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the by at the given index.
       */
      public com.google.protobuf.ByteString
          getByBytes(int index) {
        return by_.getByteString(index);
      }

      public static final int INCLUDE_FIELD_NUMBER = 3;
      private com.google.protobuf.LazyStringList include_;
      /**
       * <pre>
       *The names of columns to include in the multi-level headers table when splitting.
       *Optional.
       * </pre>
       *
       * <code>repeated string include = 3;</code>
       * @return A list containing the include.
       */
      public com.google.protobuf.ProtocolStringList
          getIncludeList() {
        return include_;
      }
      /**
       * <pre>
       *The names of columns to include in the multi-level headers table when splitting.
       *Optional.
       * </pre>
       *
       * <code>repeated string include = 3;</code>
       * @return The count of include.
       */
      public int getIncludeCount() {
        return include_.size();
      }
      /**
       * <pre>
       *The names of columns to include in the multi-level headers table when splitting.
       *Optional.
       * </pre>
       *
       * <code>repeated string include = 3;</code>
       * @param index The index of the element to return.
       * @return The include at the given index.
       */
      public java.lang.String getInclude(int index) {
        return include_.get(index);
      }
      /**
       * <pre>
       *The names of columns to include in the multi-level headers table when splitting.
       *Optional.
       * </pre>
       *
       * <code>repeated string include = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the include at the given index.
       */
      public com.google.protobuf.ByteString
          getIncludeBytes(int index) {
        return include_.getByteString(index);
      }

      public static final int OVER_FIELD_NUMBER = 4;
      private com.google.protobuf.LazyStringList over_;
      /**
       * <pre>
       *The names of columns to split over.
       *Required.
       * </pre>
       *
       * <code>repeated string over = 4;</code>
       * @return A list containing the over.
       */
      public com.google.protobuf.ProtocolStringList
          getOverList() {
        return over_;
      }
      /**
       * <pre>
       *The names of columns to split over.
       *Required.
       * </pre>
       *
       * <code>repeated string over = 4;</code>
       * @return The count of over.
       */
      public int getOverCount() {
        return over_.size();
      }
      /**
       * <pre>
       *The names of columns to split over.
       *Required.
       * </pre>
       *
       * <code>repeated string over = 4;</code>
       * @param index The index of the element to return.
       * @return The over at the given index.
       */
      public java.lang.String getOver(int index) {
        return over_.get(index);
      }
      /**
       * <pre>
       *The names of columns to split over.
       *Required.
       * </pre>
       *
       * <code>repeated string over = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the over at the given index.
       */
      public com.google.protobuf.ByteString
          getOverBytes(int index) {
        return over_.getByteString(index);
      }

      public static final int HEADERS_FIELD_NUMBER = 5;
      private static final class HeadersDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Split_HeadersEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> headers_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetHeaders() {
        if (headers_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              HeadersDefaultEntryHolder.defaultEntry);
        }
        return headers_;
      }

      public int getHeadersCount() {
        return internalGetHeaders().getMap().size();
      }
      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */

      @java.lang.Override
      public boolean containsHeaders(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetHeaders().getMap().containsKey(key);
      }
      /**
       * Use {@link #getHeadersMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getHeaders() {
        return getHeadersMap();
      }
      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getHeadersMap() {
        return internalGetHeaders().getMap();
      }
      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */
      @java.lang.Override

      public java.lang.String getHeadersOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetHeaders().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *The human-readable header values of `over` columns to be applied.
       *Key is the column name, and value is the human-readable value.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 5;</code>
       */
      @java.lang.Override

      public java.lang.String getHeadersOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetHeaders().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public static final int REMOVE_EMPTY_SPLIT_COLUMNS_FIELD_NUMBER = 6;
      private boolean removeEmptySplitColumns_;
      /**
       * <pre>
       *Whether to remove empty split columns or not.
       *Default is `false`.
       *Optional.
       * </pre>
       *
       * <code>bool remove_empty_split_columns = 6;</code>
       * @return The removeEmptySplitColumns.
       */
      @java.lang.Override
      public boolean getRemoveEmptySplitColumns() {
        return removeEmptySplitColumns_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getAliasBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, alias_);
        }
        for (int i = 0; i < by_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, by_.getRaw(i));
        }
        for (int i = 0; i < include_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, include_.getRaw(i));
        }
        for (int i = 0; i < over_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, over_.getRaw(i));
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetHeaders(),
            HeadersDefaultEntryHolder.defaultEntry,
            5);
        if (removeEmptySplitColumns_ != false) {
          output.writeBool(6, removeEmptySplitColumns_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getAliasBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, alias_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < by_.size(); i++) {
            dataSize += computeStringSizeNoTag(by_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getByList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < include_.size(); i++) {
            dataSize += computeStringSizeNoTag(include_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getIncludeList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < over_.size(); i++) {
            dataSize += computeStringSizeNoTag(over_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getOverList().size();
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetHeaders().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          headers__ = HeadersDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, headers__);
        }
        if (removeEmptySplitColumns_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, removeEmptySplitColumns_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.factset.protobuf.stach.v3.TableViewProto.TableView.Split)) {
          return super.equals(obj);
        }
        com.factset.protobuf.stach.v3.TableViewProto.TableView.Split other = (com.factset.protobuf.stach.v3.TableViewProto.TableView.Split) obj;

        if (!getAlias()
            .equals(other.getAlias())) return false;
        if (!getByList()
            .equals(other.getByList())) return false;
        if (!getIncludeList()
            .equals(other.getIncludeList())) return false;
        if (!getOverList()
            .equals(other.getOverList())) return false;
        if (!internalGetHeaders().equals(
            other.internalGetHeaders())) return false;
        if (getRemoveEmptySplitColumns()
            != other.getRemoveEmptySplitColumns()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
        if (getByCount() > 0) {
          hash = (37 * hash) + BY_FIELD_NUMBER;
          hash = (53 * hash) + getByList().hashCode();
        }
        if (getIncludeCount() > 0) {
          hash = (37 * hash) + INCLUDE_FIELD_NUMBER;
          hash = (53 * hash) + getIncludeList().hashCode();
        }
        if (getOverCount() > 0) {
          hash = (37 * hash) + OVER_FIELD_NUMBER;
          hash = (53 * hash) + getOverList().hashCode();
        }
        if (!internalGetHeaders().getMap().isEmpty()) {
          hash = (37 * hash) + HEADERS_FIELD_NUMBER;
          hash = (53 * hash) + internalGetHeaders().hashCode();
        }
        hash = (37 * hash) + REMOVE_EMPTY_SPLIT_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRemoveEmptySplitColumns());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.factset.protobuf.stach.v3.TableViewProto.TableView.Split prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *An algorithm that vertically splits tabular data and produces a column for each unique value in the columns that were split over.
       * </pre>
       *
       * Protobuf type {@code factset.protobuf.stach.v3.TableView.Split}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:factset.protobuf.stach.v3.TableView.Split)
          com.factset.protobuf.stach.v3.TableViewProto.TableView.SplitOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Split_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 5:
              return internalGetHeaders();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 5:
              return internalGetMutableHeaders();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Split_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.class, com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.Builder.class);
        }

        // Construct using com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          alias_ = "";

          by_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          include_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          over_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          internalGetMutableHeaders().clear();
          removeEmptySplitColumns_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_Split_descriptor;
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.Split getDefaultInstanceForType() {
          return com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.getDefaultInstance();
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.Split build() {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Split result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.Split buildPartial() {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Split result = new com.factset.protobuf.stach.v3.TableViewProto.TableView.Split(this);
          int from_bitField0_ = bitField0_;
          result.alias_ = alias_;
          if (((bitField0_ & 0x00000001) != 0)) {
            by_ = by_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.by_ = by_;
          if (((bitField0_ & 0x00000002) != 0)) {
            include_ = include_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.include_ = include_;
          if (((bitField0_ & 0x00000004) != 0)) {
            over_ = over_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.over_ = over_;
          result.headers_ = internalGetHeaders();
          result.headers_.makeImmutable();
          result.removeEmptySplitColumns_ = removeEmptySplitColumns_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.factset.protobuf.stach.v3.TableViewProto.TableView.Split) {
            return mergeFrom((com.factset.protobuf.stach.v3.TableViewProto.TableView.Split)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.factset.protobuf.stach.v3.TableViewProto.TableView.Split other) {
          if (other == com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.getDefaultInstance()) return this;
          if (!other.getAlias().isEmpty()) {
            alias_ = other.alias_;
            onChanged();
          }
          if (!other.by_.isEmpty()) {
            if (by_.isEmpty()) {
              by_ = other.by_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureByIsMutable();
              by_.addAll(other.by_);
            }
            onChanged();
          }
          if (!other.include_.isEmpty()) {
            if (include_.isEmpty()) {
              include_ = other.include_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureIncludeIsMutable();
              include_.addAll(other.include_);
            }
            onChanged();
          }
          if (!other.over_.isEmpty()) {
            if (over_.isEmpty()) {
              over_ = other.over_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureOverIsMutable();
              over_.addAll(other.over_);
            }
            onChanged();
          }
          internalGetMutableHeaders().mergeFrom(
              other.internalGetHeaders());
          if (other.getRemoveEmptySplitColumns() != false) {
            setRemoveEmptySplitColumns(other.getRemoveEmptySplitColumns());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Split parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.factset.protobuf.stach.v3.TableViewProto.TableView.Split) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object alias_ = "";
        /**
         * <pre>
         *The alias of the columns generated by the split algorithm.
         *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @return The alias.
         */
        public java.lang.String getAlias() {
          java.lang.Object ref = alias_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            alias_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         *The alias of the columns generated by the split algorithm.
         *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @return The bytes for alias.
         */
        public com.google.protobuf.ByteString
            getAliasBytes() {
          java.lang.Object ref = alias_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            alias_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *The alias of the columns generated by the split algorithm.
         *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @param value The alias to set.
         * @return This builder for chaining.
         */
        public Builder setAlias(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          alias_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The alias of the columns generated by the split algorithm.
         *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAlias() {
          
          alias_ = getDefaultInstance().getAlias();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The alias of the columns generated by the split algorithm.
         *A dollar sign ($) prefix, such as "$splitColumns", can be used to indicate an alias but is not necessary.
         *Required.
         * </pre>
         *
         * <code>string alias = 1;</code>
         * @param value The bytes for alias to set.
         * @return This builder for chaining.
         */
        public Builder setAliasBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          alias_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList by_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureByIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            by_ = new com.google.protobuf.LazyStringArrayList(by_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @return A list containing the by.
         */
        public com.google.protobuf.ProtocolStringList
            getByList() {
          return by_.getUnmodifiableView();
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @return The count of by.
         */
        public int getByCount() {
          return by_.size();
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @param index The index of the element to return.
         * @return The by at the given index.
         */
        public java.lang.String getBy(int index) {
          return by_.get(index);
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @param index The index of the value to return.
         * @return The bytes of the by at the given index.
         */
        public com.google.protobuf.ByteString
            getByBytes(int index) {
          return by_.getByteString(index);
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @param index The index to set the value at.
         * @param value The by to set.
         * @return This builder for chaining.
         */
        public Builder setBy(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureByIsMutable();
          by_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @param value The by to add.
         * @return This builder for chaining.
         */
        public Builder addBy(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureByIsMutable();
          by_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @param values The by to add.
         * @return This builder for chaining.
         */
        public Builder addAllBy(
            java.lang.Iterable<java.lang.String> values) {
          ensureByIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, by_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearBy() {
          by_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to split by.
         *Required.
         * </pre>
         *
         * <code>repeated string by = 2;</code>
         * @param value The bytes of the by to add.
         * @return This builder for chaining.
         */
        public Builder addByBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureByIsMutable();
          by_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList include_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureIncludeIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            include_ = new com.google.protobuf.LazyStringArrayList(include_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @return A list containing the include.
         */
        public com.google.protobuf.ProtocolStringList
            getIncludeList() {
          return include_.getUnmodifiableView();
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @return The count of include.
         */
        public int getIncludeCount() {
          return include_.size();
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @param index The index of the element to return.
         * @return The include at the given index.
         */
        public java.lang.String getInclude(int index) {
          return include_.get(index);
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @param index The index of the value to return.
         * @return The bytes of the include at the given index.
         */
        public com.google.protobuf.ByteString
            getIncludeBytes(int index) {
          return include_.getByteString(index);
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @param index The index to set the value at.
         * @param value The include to set.
         * @return This builder for chaining.
         */
        public Builder setInclude(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureIncludeIsMutable();
          include_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @param value The include to add.
         * @return This builder for chaining.
         */
        public Builder addInclude(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureIncludeIsMutable();
          include_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @param values The include to add.
         * @return This builder for chaining.
         */
        public Builder addAllInclude(
            java.lang.Iterable<java.lang.String> values) {
          ensureIncludeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, include_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearInclude() {
          include_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to include in the multi-level headers table when splitting.
         *Optional.
         * </pre>
         *
         * <code>repeated string include = 3;</code>
         * @param value The bytes of the include to add.
         * @return This builder for chaining.
         */
        public Builder addIncludeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureIncludeIsMutable();
          include_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList over_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureOverIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            over_ = new com.google.protobuf.LazyStringArrayList(over_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @return A list containing the over.
         */
        public com.google.protobuf.ProtocolStringList
            getOverList() {
          return over_.getUnmodifiableView();
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @return The count of over.
         */
        public int getOverCount() {
          return over_.size();
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @param index The index of the element to return.
         * @return The over at the given index.
         */
        public java.lang.String getOver(int index) {
          return over_.get(index);
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @param index The index of the value to return.
         * @return The bytes of the over at the given index.
         */
        public com.google.protobuf.ByteString
            getOverBytes(int index) {
          return over_.getByteString(index);
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @param index The index to set the value at.
         * @param value The over to set.
         * @return This builder for chaining.
         */
        public Builder setOver(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureOverIsMutable();
          over_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @param value The over to add.
         * @return This builder for chaining.
         */
        public Builder addOver(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureOverIsMutable();
          over_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @param values The over to add.
         * @return This builder for chaining.
         */
        public Builder addAllOver(
            java.lang.Iterable<java.lang.String> values) {
          ensureOverIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, over_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearOver() {
          over_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The names of columns to split over.
         *Required.
         * </pre>
         *
         * <code>repeated string over = 4;</code>
         * @param value The bytes of the over to add.
         * @return This builder for chaining.
         */
        public Builder addOverBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureOverIsMutable();
          over_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> headers_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetHeaders() {
          if (headers_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                HeadersDefaultEntryHolder.defaultEntry);
          }
          return headers_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableHeaders() {
          onChanged();;
          if (headers_ == null) {
            headers_ = com.google.protobuf.MapField.newMapField(
                HeadersDefaultEntryHolder.defaultEntry);
          }
          if (!headers_.isMutable()) {
            headers_ = headers_.copy();
          }
          return headers_;
        }

        public int getHeadersCount() {
          return internalGetHeaders().getMap().size();
        }
        /**
         * <pre>
         *The human-readable header values of `over` columns to be applied.
         *Key is the column name, and value is the human-readable value.
         *Optional.
         * </pre>
         *
         * <code>map&lt;string, string&gt; headers = 5;</code>
         */

        @java.lang.Override
        public boolean containsHeaders(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetHeaders().getMap().containsKey(key);
        }
        /**
         * Use {@link #getHeadersMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getHeaders() {
          return getHeadersMap();
        }
        /**
         * <pre>
         *The human-readable header values of `over` columns to be applied.
         *Key is the column name, and value is the human-readable value.
         *Optional.
         * </pre>
         *
         * <code>map&lt;string, string&gt; headers = 5;</code>
         */
        @java.lang.Override

        public java.util.Map<java.lang.String, java.lang.String> getHeadersMap() {
          return internalGetHeaders().getMap();
        }
        /**
         * <pre>
         *The human-readable header values of `over` columns to be applied.
         *Key is the column name, and value is the human-readable value.
         *Optional.
         * </pre>
         *
         * <code>map&lt;string, string&gt; headers = 5;</code>
         */
        @java.lang.Override

        public java.lang.String getHeadersOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetHeaders().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         *The human-readable header values of `over` columns to be applied.
         *Key is the column name, and value is the human-readable value.
         *Optional.
         * </pre>
         *
         * <code>map&lt;string, string&gt; headers = 5;</code>
         */
        @java.lang.Override

        public java.lang.String getHeadersOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetHeaders().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearHeaders() {
          internalGetMutableHeaders().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         *The human-readable header values of `over` columns to be applied.
         *Key is the column name, and value is the human-readable value.
         *Optional.
         * </pre>
         *
         * <code>map&lt;string, string&gt; headers = 5;</code>
         */

        public Builder removeHeaders(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableHeaders().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableHeaders() {
          return internalGetMutableHeaders().getMutableMap();
        }
        /**
         * <pre>
         *The human-readable header values of `over` columns to be applied.
         *Key is the column name, and value is the human-readable value.
         *Optional.
         * </pre>
         *
         * <code>map&lt;string, string&gt; headers = 5;</code>
         */
        public Builder putHeaders(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableHeaders().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         *The human-readable header values of `over` columns to be applied.
         *Key is the column name, and value is the human-readable value.
         *Optional.
         * </pre>
         *
         * <code>map&lt;string, string&gt; headers = 5;</code>
         */

        public Builder putAllHeaders(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableHeaders().getMutableMap()
              .putAll(values);
          return this;
        }

        private boolean removeEmptySplitColumns_ ;
        /**
         * <pre>
         *Whether to remove empty split columns or not.
         *Default is `false`.
         *Optional.
         * </pre>
         *
         * <code>bool remove_empty_split_columns = 6;</code>
         * @return The removeEmptySplitColumns.
         */
        @java.lang.Override
        public boolean getRemoveEmptySplitColumns() {
          return removeEmptySplitColumns_;
        }
        /**
         * <pre>
         *Whether to remove empty split columns or not.
         *Default is `false`.
         *Optional.
         * </pre>
         *
         * <code>bool remove_empty_split_columns = 6;</code>
         * @param value The removeEmptySplitColumns to set.
         * @return This builder for chaining.
         */
        public Builder setRemoveEmptySplitColumns(boolean value) {
          
          removeEmptySplitColumns_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *Whether to remove empty split columns or not.
         *Default is `false`.
         *Optional.
         * </pre>
         *
         * <code>bool remove_empty_split_columns = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearRemoveEmptySplitColumns() {
          
          removeEmptySplitColumns_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:factset.protobuf.stach.v3.TableView.Split)
      }

      // @@protoc_insertion_point(class_scope:factset.protobuf.stach.v3.TableView.Split)
      private static final com.factset.protobuf.stach.v3.TableViewProto.TableView.Split DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.factset.protobuf.stach.v3.TableViewProto.TableView.Split();
      }

      public static com.factset.protobuf.stach.v3.TableViewProto.TableView.Split getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Split>
          PARSER = new com.google.protobuf.AbstractParser<Split>() {
        @java.lang.Override
        public Split parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Split(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Split> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Split> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.Split getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DISPLAY_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object displayName_;
    /**
     * <pre>
     *The human readable display name for the table.
     *Optional.
     * </pre>
     *
     * <code>string display_name = 1;</code>
     * @return The displayName.
     */
    @java.lang.Override
    public java.lang.String getDisplayName() {
      java.lang.Object ref = displayName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        displayName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *The human readable display name for the table.
     *Optional.
     * </pre>
     *
     * <code>string display_name = 1;</code>
     * @return The bytes for displayName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      java.lang.Object ref = displayName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        displayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLUMNS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList columns_;
    /**
     * <pre>
     *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
     *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
     *Required.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @return A list containing the columns.
     */
    public com.google.protobuf.ProtocolStringList
        getColumnsList() {
      return columns_;
    }
    /**
     * <pre>
     *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
     *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
     *Required.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @return The count of columns.
     */
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <pre>
     *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
     *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
     *Required.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @param index The index of the element to return.
     * @return The columns at the given index.
     */
    public java.lang.String getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <pre>
     *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
     *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
     *Required.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the columns at the given index.
     */
    public com.google.protobuf.ByteString
        getColumnsBytes(int index) {
      return columns_.getByteString(index);
    }

    public static final int HEADERS_FIELD_NUMBER = 3;
    private static final class HeadersDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_HeadersEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> headers_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetHeaders() {
      if (headers_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            HeadersDefaultEntryHolder.defaultEntry);
      }
      return headers_;
    }

    public int getHeadersCount() {
      return internalGetHeaders().getMap().size();
    }
    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */

    @java.lang.Override
    public boolean containsHeaders(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetHeaders().getMap().containsKey(key);
    }
    /**
     * Use {@link #getHeadersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getHeaders() {
      return getHeadersMap();
    }
    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getHeadersMap() {
      return internalGetHeaders().getMap();
    }
    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getHeadersOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetHeaders().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *The human-readable header values of columns to be applied.
     *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getHeadersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetHeaders().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int GROUP_FIELD_NUMBER = 4;
    private com.factset.protobuf.stach.v3.TableViewProto.TableView.Group group_;
    /**
     * <pre>
     *The group algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
     * @return Whether the group field is set.
     */
    @java.lang.Override
    public boolean hasGroup() {
      return group_ != null;
    }
    /**
     * <pre>
     *The group algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
     * @return The group.
     */
    @java.lang.Override
    public com.factset.protobuf.stach.v3.TableViewProto.TableView.Group getGroup() {
      return group_ == null ? com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.getDefaultInstance() : group_;
    }
    /**
     * <pre>
     *The group algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
     */
    @java.lang.Override
    public com.factset.protobuf.stach.v3.TableViewProto.TableView.GroupOrBuilder getGroupOrBuilder() {
      return getGroup();
    }

    public static final int SPLIT_FIELD_NUMBER = 5;
    private com.factset.protobuf.stach.v3.TableViewProto.TableView.Split split_;
    /**
     * <pre>
     *The split algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
     * @return Whether the split field is set.
     */
    @java.lang.Override
    public boolean hasSplit() {
      return split_ != null;
    }
    /**
     * <pre>
     *The split algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
     * @return The split.
     */
    @java.lang.Override
    public com.factset.protobuf.stach.v3.TableViewProto.TableView.Split getSplit() {
      return split_ == null ? com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.getDefaultInstance() : split_;
    }
    /**
     * <pre>
     *The split algorithm to be applied.
     *Optional.
     * </pre>
     *
     * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
     */
    @java.lang.Override
    public com.factset.protobuf.stach.v3.TableViewProto.TableView.SplitOrBuilder getSplitOrBuilder() {
      return getSplit();
    }

    public static final int CUSTOM_METADATA_FIELD_NUMBER = 100;
    private static final class CustomMetadataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>newDefaultInstance(
                  com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_CustomMetadataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> customMetadata_;
    private com.google.protobuf.MapField<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>
    internalGetCustomMetadata() {
      if (customMetadata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CustomMetadataDefaultEntryHolder.defaultEntry);
      }
      return customMetadata_;
    }

    public int getCustomMetadataCount() {
      return internalGetCustomMetadata().getMap().size();
    }
    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */

    @java.lang.Override
    public boolean containsCustomMetadata(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetCustomMetadata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCustomMetadataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> getCustomMetadata() {
      return getCustomMetadataMap();
    }
    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> getCustomMetadataMap() {
      return internalGetCustomMetadata().getMap();
    }
    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */
    @java.lang.Override

    public com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem getCustomMetadataOrDefault(
        java.lang.String key,
        com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> map =
          internalGetCustomMetadata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *The custom metadata.
     *Optional.
     * </pre>
     *
     * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
     */
    @java.lang.Override

    public com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem getCustomMetadataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> map =
          internalGetCustomMetadata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDisplayNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, displayName_);
      }
      for (int i = 0; i < columns_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, columns_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetHeaders(),
          HeadersDefaultEntryHolder.defaultEntry,
          3);
      if (group_ != null) {
        output.writeMessage(4, getGroup());
      }
      if (split_ != null) {
        output.writeMessage(5, getSplit());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetCustomMetadata(),
          CustomMetadataDefaultEntryHolder.defaultEntry,
          100);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDisplayNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, displayName_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < columns_.size(); i++) {
          dataSize += computeStringSizeNoTag(columns_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getColumnsList().size();
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetHeaders().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        headers__ = HeadersDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, headers__);
      }
      if (group_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGroup());
      }
      if (split_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSplit());
      }
      for (java.util.Map.Entry<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> entry
           : internalGetCustomMetadata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>
        customMetadata__ = CustomMetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(100, customMetadata__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.factset.protobuf.stach.v3.TableViewProto.TableView)) {
        return super.equals(obj);
      }
      com.factset.protobuf.stach.v3.TableViewProto.TableView other = (com.factset.protobuf.stach.v3.TableViewProto.TableView) obj;

      if (!getDisplayName()
          .equals(other.getDisplayName())) return false;
      if (!getColumnsList()
          .equals(other.getColumnsList())) return false;
      if (!internalGetHeaders().equals(
          other.internalGetHeaders())) return false;
      if (hasGroup() != other.hasGroup()) return false;
      if (hasGroup()) {
        if (!getGroup()
            .equals(other.getGroup())) return false;
      }
      if (hasSplit() != other.hasSplit()) return false;
      if (hasSplit()) {
        if (!getSplit()
            .equals(other.getSplit())) return false;
      }
      if (!internalGetCustomMetadata().equals(
          other.internalGetCustomMetadata())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DISPLAY_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDisplayName().hashCode();
      if (getColumnsCount() > 0) {
        hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getColumnsList().hashCode();
      }
      if (!internalGetHeaders().getMap().isEmpty()) {
        hash = (37 * hash) + HEADERS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetHeaders().hashCode();
      }
      if (hasGroup()) {
        hash = (37 * hash) + GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getGroup().hashCode();
      }
      if (hasSplit()) {
        hash = (37 * hash) + SPLIT_FIELD_NUMBER;
        hash = (53 * hash) + getSplit().hashCode();
      }
      if (!internalGetCustomMetadata().getMap().isEmpty()) {
        hash = (37 * hash) + CUSTOM_METADATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCustomMetadata().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.v3.TableViewProto.TableView parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.factset.protobuf.stach.v3.TableViewProto.TableView prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *A set of metadata specifying the settings that instruct how to turn tabular data into a rendered table.
     * </pre>
     *
     * Protobuf type {@code factset.protobuf.stach.v3.TableView}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:factset.protobuf.stach.v3.TableView)
        com.factset.protobuf.stach.v3.TableViewProto.TableViewOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetHeaders();
          case 100:
            return internalGetCustomMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableHeaders();
          case 100:
            return internalGetMutableCustomMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.factset.protobuf.stach.v3.TableViewProto.TableView.class, com.factset.protobuf.stach.v3.TableViewProto.TableView.Builder.class);
      }

      // Construct using com.factset.protobuf.stach.v3.TableViewProto.TableView.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        displayName_ = "";

        columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableHeaders().clear();
        if (groupBuilder_ == null) {
          group_ = null;
        } else {
          group_ = null;
          groupBuilder_ = null;
        }
        if (splitBuilder_ == null) {
          split_ = null;
        } else {
          split_ = null;
          splitBuilder_ = null;
        }
        internalGetMutableCustomMetadata().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.factset.protobuf.stach.v3.TableViewProto.internal_static_factset_protobuf_stach_v3_TableView_descriptor;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView getDefaultInstanceForType() {
        return com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance();
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView build() {
        com.factset.protobuf.stach.v3.TableViewProto.TableView result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView buildPartial() {
        com.factset.protobuf.stach.v3.TableViewProto.TableView result = new com.factset.protobuf.stach.v3.TableViewProto.TableView(this);
        int from_bitField0_ = bitField0_;
        result.displayName_ = displayName_;
        if (((bitField0_ & 0x00000001) != 0)) {
          columns_ = columns_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.columns_ = columns_;
        result.headers_ = internalGetHeaders();
        result.headers_.makeImmutable();
        if (groupBuilder_ == null) {
          result.group_ = group_;
        } else {
          result.group_ = groupBuilder_.build();
        }
        if (splitBuilder_ == null) {
          result.split_ = split_;
        } else {
          result.split_ = splitBuilder_.build();
        }
        result.customMetadata_ = internalGetCustomMetadata();
        result.customMetadata_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.factset.protobuf.stach.v3.TableViewProto.TableView) {
          return mergeFrom((com.factset.protobuf.stach.v3.TableViewProto.TableView)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.factset.protobuf.stach.v3.TableViewProto.TableView other) {
        if (other == com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance()) return this;
        if (!other.getDisplayName().isEmpty()) {
          displayName_ = other.displayName_;
          onChanged();
        }
        if (!other.columns_.isEmpty()) {
          if (columns_.isEmpty()) {
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureColumnsIsMutable();
            columns_.addAll(other.columns_);
          }
          onChanged();
        }
        internalGetMutableHeaders().mergeFrom(
            other.internalGetHeaders());
        if (other.hasGroup()) {
          mergeGroup(other.getGroup());
        }
        if (other.hasSplit()) {
          mergeSplit(other.getSplit());
        }
        internalGetMutableCustomMetadata().mergeFrom(
            other.internalGetCustomMetadata());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.factset.protobuf.stach.v3.TableViewProto.TableView parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.factset.protobuf.stach.v3.TableViewProto.TableView) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object displayName_ = "";
      /**
       * <pre>
       *The human readable display name for the table.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 1;</code>
       * @return The displayName.
       */
      public java.lang.String getDisplayName() {
        java.lang.Object ref = displayName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          displayName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *The human readable display name for the table.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 1;</code>
       * @return The bytes for displayName.
       */
      public com.google.protobuf.ByteString
          getDisplayNameBytes() {
        java.lang.Object ref = displayName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          displayName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *The human readable display name for the table.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 1;</code>
       * @param value The displayName to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        displayName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The human readable display name for the table.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisplayName() {
        
        displayName_ = getDefaultInstance().getDisplayName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The human readable display name for the table.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 1;</code>
       * @param value The bytes for displayName to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        displayName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureColumnsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          columns_ = new com.google.protobuf.LazyStringArrayList(columns_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @return A list containing the columns.
       */
      public com.google.protobuf.ProtocolStringList
          getColumnsList() {
        return columns_.getUnmodifiableView();
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @return The count of columns.
       */
      public int getColumnsCount() {
        return columns_.size();
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param index The index of the element to return.
       * @return The columns at the given index.
       */
      public java.lang.String getColumns(int index) {
        return columns_.get(index);
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the columns at the given index.
       */
      public com.google.protobuf.ByteString
          getColumnsBytes(int index) {
        return columns_.getByteString(index);
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param index The index to set the value at.
       * @param value The columns to set.
       * @return This builder for chaining.
       */
      public Builder setColumns(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnsIsMutable();
        columns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param value The columns to add.
       * @return This builder for chaining.
       */
      public Builder addColumns(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param values The columns to add.
       * @return This builder for chaining.
       */
      public Builder addAllColumns(
          java.lang.Iterable<java.lang.String> values) {
        ensureColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, columns_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearColumns() {
        columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The names of columns to display, which can include the alias for the collapsed column and the alias for the split columns.
       *An empty array will display no columns. The order of the column names is the order the columns will be displayed.
       *Required.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param value The bytes of the columns to add.
       * @return This builder for chaining.
       */
      public Builder addColumnsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> headers_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetHeaders() {
        if (headers_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              HeadersDefaultEntryHolder.defaultEntry);
        }
        return headers_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableHeaders() {
        onChanged();;
        if (headers_ == null) {
          headers_ = com.google.protobuf.MapField.newMapField(
              HeadersDefaultEntryHolder.defaultEntry);
        }
        if (!headers_.isMutable()) {
          headers_ = headers_.copy();
        }
        return headers_;
      }

      public int getHeadersCount() {
        return internalGetHeaders().getMap().size();
      }
      /**
       * <pre>
       *The human-readable header values of columns to be applied.
       *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 3;</code>
       */

      @java.lang.Override
      public boolean containsHeaders(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetHeaders().getMap().containsKey(key);
      }
      /**
       * Use {@link #getHeadersMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getHeaders() {
        return getHeadersMap();
      }
      /**
       * <pre>
       *The human-readable header values of columns to be applied.
       *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getHeadersMap() {
        return internalGetHeaders().getMap();
      }
      /**
       * <pre>
       *The human-readable header values of columns to be applied.
       *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 3;</code>
       */
      @java.lang.Override

      public java.lang.String getHeadersOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetHeaders().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *The human-readable header values of columns to be applied.
       *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 3;</code>
       */
      @java.lang.Override

      public java.lang.String getHeadersOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetHeaders().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearHeaders() {
        internalGetMutableHeaders().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *The human-readable header values of columns to be applied.
       *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 3;</code>
       */

      public Builder removeHeaders(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableHeaders().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableHeaders() {
        return internalGetMutableHeaders().getMutableMap();
      }
      /**
       * <pre>
       *The human-readable header values of columns to be applied.
       *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 3;</code>
       */
      public Builder putHeaders(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableHeaders().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *The human-readable header values of columns to be applied.
       *Key is the column name, and value is the human-readable header value. e.g. `{ 'mcap': 'Market Capitalization' }`
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, string&gt; headers = 3;</code>
       */

      public Builder putAllHeaders(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableHeaders().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.factset.protobuf.stach.v3.TableViewProto.TableView.Group group_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Group, com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.GroupOrBuilder> groupBuilder_;
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       * @return Whether the group field is set.
       */
      public boolean hasGroup() {
        return groupBuilder_ != null || group_ != null;
      }
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       * @return The group.
       */
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.Group getGroup() {
        if (groupBuilder_ == null) {
          return group_ == null ? com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.getDefaultInstance() : group_;
        } else {
          return groupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       */
      public Builder setGroup(com.factset.protobuf.stach.v3.TableViewProto.TableView.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          group_ = value;
          onChanged();
        } else {
          groupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       */
      public Builder setGroup(
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          group_ = builderForValue.build();
          onChanged();
        } else {
          groupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       */
      public Builder mergeGroup(com.factset.protobuf.stach.v3.TableViewProto.TableView.Group value) {
        if (groupBuilder_ == null) {
          if (group_ != null) {
            group_ =
              com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.newBuilder(group_).mergeFrom(value).buildPartial();
          } else {
            group_ = value;
          }
          onChanged();
        } else {
          groupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       */
      public Builder clearGroup() {
        if (groupBuilder_ == null) {
          group_ = null;
          onChanged();
        } else {
          group_ = null;
          groupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       */
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.Builder getGroupBuilder() {
        
        onChanged();
        return getGroupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       */
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.GroupOrBuilder getGroupOrBuilder() {
        if (groupBuilder_ != null) {
          return groupBuilder_.getMessageOrBuilder();
        } else {
          return group_ == null ?
              com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.getDefaultInstance() : group_;
        }
      }
      /**
       * <pre>
       *The group algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Group group = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Group, com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.GroupOrBuilder> 
          getGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          groupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.factset.protobuf.stach.v3.TableViewProto.TableView.Group, com.factset.protobuf.stach.v3.TableViewProto.TableView.Group.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.GroupOrBuilder>(
                  getGroup(),
                  getParentForChildren(),
                  isClean());
          group_ = null;
        }
        return groupBuilder_;
      }

      private com.factset.protobuf.stach.v3.TableViewProto.TableView.Split split_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Split, com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.SplitOrBuilder> splitBuilder_;
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       * @return Whether the split field is set.
       */
      public boolean hasSplit() {
        return splitBuilder_ != null || split_ != null;
      }
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       * @return The split.
       */
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.Split getSplit() {
        if (splitBuilder_ == null) {
          return split_ == null ? com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.getDefaultInstance() : split_;
        } else {
          return splitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       */
      public Builder setSplit(com.factset.protobuf.stach.v3.TableViewProto.TableView.Split value) {
        if (splitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          split_ = value;
          onChanged();
        } else {
          splitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       */
      public Builder setSplit(
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.Builder builderForValue) {
        if (splitBuilder_ == null) {
          split_ = builderForValue.build();
          onChanged();
        } else {
          splitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       */
      public Builder mergeSplit(com.factset.protobuf.stach.v3.TableViewProto.TableView.Split value) {
        if (splitBuilder_ == null) {
          if (split_ != null) {
            split_ =
              com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.newBuilder(split_).mergeFrom(value).buildPartial();
          } else {
            split_ = value;
          }
          onChanged();
        } else {
          splitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       */
      public Builder clearSplit() {
        if (splitBuilder_ == null) {
          split_ = null;
          onChanged();
        } else {
          split_ = null;
          splitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       */
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.Builder getSplitBuilder() {
        
        onChanged();
        return getSplitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       */
      public com.factset.protobuf.stach.v3.TableViewProto.TableView.SplitOrBuilder getSplitOrBuilder() {
        if (splitBuilder_ != null) {
          return splitBuilder_.getMessageOrBuilder();
        } else {
          return split_ == null ?
              com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.getDefaultInstance() : split_;
        }
      }
      /**
       * <pre>
       *The split algorithm to be applied.
       *Optional.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView.Split split = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.factset.protobuf.stach.v3.TableViewProto.TableView.Split, com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.SplitOrBuilder> 
          getSplitFieldBuilder() {
        if (splitBuilder_ == null) {
          splitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.factset.protobuf.stach.v3.TableViewProto.TableView.Split, com.factset.protobuf.stach.v3.TableViewProto.TableView.Split.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableView.SplitOrBuilder>(
                  getSplit(),
                  getParentForChildren(),
                  isClean());
          split_ = null;
        }
        return splitBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> customMetadata_;
      private com.google.protobuf.MapField<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>
      internalGetCustomMetadata() {
        if (customMetadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CustomMetadataDefaultEntryHolder.defaultEntry);
        }
        return customMetadata_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>
      internalGetMutableCustomMetadata() {
        onChanged();;
        if (customMetadata_ == null) {
          customMetadata_ = com.google.protobuf.MapField.newMapField(
              CustomMetadataDefaultEntryHolder.defaultEntry);
        }
        if (!customMetadata_.isMutable()) {
          customMetadata_ = customMetadata_.copy();
        }
        return customMetadata_;
      }

      public int getCustomMetadataCount() {
        return internalGetCustomMetadata().getMap().size();
      }
      /**
       * <pre>
       *The custom metadata.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
       */

      @java.lang.Override
      public boolean containsCustomMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetCustomMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCustomMetadataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> getCustomMetadata() {
        return getCustomMetadataMap();
      }
      /**
       * <pre>
       *The custom metadata.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> getCustomMetadataMap() {
        return internalGetCustomMetadata().getMap();
      }
      /**
       * <pre>
       *The custom metadata.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
       */
      @java.lang.Override

      public com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem getCustomMetadataOrDefault(
          java.lang.String key,
          com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> map =
            internalGetCustomMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *The custom metadata.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
       */
      @java.lang.Override

      public com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem getCustomMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> map =
            internalGetCustomMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearCustomMetadata() {
        internalGetMutableCustomMetadata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *The custom metadata.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
       */

      public Builder removeCustomMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableCustomMetadata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem>
      getMutableCustomMetadata() {
        return internalGetMutableCustomMetadata().getMutableMap();
      }
      /**
       * <pre>
       *The custom metadata.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
       */
      public Builder putCustomMetadata(
          java.lang.String key,
          com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableCustomMetadata().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *The custom metadata.
       *Optional.
       * </pre>
       *
       * <code>map&lt;string, .factset.protobuf.stach.v3.MetadataItem&gt; custom_metadata = 100;</code>
       */

      public Builder putAllCustomMetadata(
          java.util.Map<java.lang.String, com.factset.protobuf.stach.v3.MetadataItemProto.MetadataItem> values) {
        internalGetMutableCustomMetadata().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:factset.protobuf.stach.v3.TableView)
    }

    // @@protoc_insertion_point(class_scope:factset.protobuf.stach.v3.TableView)
    private static final com.factset.protobuf.stach.v3.TableViewProto.TableView DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.factset.protobuf.stach.v3.TableViewProto.TableView();
    }

    public static com.factset.protobuf.stach.v3.TableViewProto.TableView getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TableView>
        PARSER = new com.google.protobuf.AbstractParser<TableView>() {
      @java.lang.Override
      public TableView parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableView(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TableView> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TableView> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.factset.protobuf.stach.v3.TableViewProto.TableView getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_TableView_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_TableView_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_TableView_Group_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_TableView_Group_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_TableView_Split_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_TableView_Split_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_TableView_Split_HeadersEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_TableView_Split_HeadersEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_TableView_HeadersEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_TableView_HeadersEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_TableView_CustomMetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_TableView_CustomMetadataEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%fds/protobuf/stach/v3/TableView.proto\022" +
      "\031factset.protobuf.stach.v3\032(fds/protobuf" +
      "/stach/v3/MetadataItem.proto\"\270\006\n\tTableVi" +
      "ew\022\024\n\014display_name\030\001 \001(\t\022\017\n\007columns\030\002 \003(" +
      "\t\022B\n\007headers\030\003 \003(\01321.factset.protobuf.st" +
      "ach.v3.TableView.HeadersEntry\0229\n\005group\030\004" +
      " \001(\0132*.factset.protobuf.stach.v3.TableVi" +
      "ew.Group\0229\n\005split\030\005 \001(\0132*.factset.protob" +
      "uf.stach.v3.TableView.Split\022Q\n\017custom_me" +
      "tadata\030d \003(\01328.factset.protobuf.stach.v3" +
      ".TableView.CustomMetadataEntry\032c\n\005Group\022" +
      "\n\n\002by\030\001 \003(\t\022N\n\020collapsed_column\030\002 \001(\01324." +
      "factset.protobuf.stach.v3.TableView.Coll" +
      "apsedColumn\032 \n\017CollapsedColumn\022\r\n\005alias\030" +
      "\001 \001(\t\032\337\001\n\005Split\022\r\n\005alias\030\001 \001(\t\022\n\n\002by\030\002 \003" +
      "(\t\022\017\n\007include\030\003 \003(\t\022\014\n\004over\030\004 \003(\t\022H\n\007hea" +
      "ders\030\005 \003(\01327.factset.protobuf.stach.v3.T" +
      "ableView.Split.HeadersEntry\022\"\n\032remove_em" +
      "pty_split_columns\030\006 \001(\010\032.\n\014HeadersEntry\022" +
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032.\n\014Heade" +
      "rsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032" +
      "^\n\023CustomMetadataEntry\022\013\n\003key\030\001 \001(\t\0226\n\005v" +
      "alue\030\002 \001(\0132\'.factset.protobuf.stach.v3.M" +
      "etadataItem:\0028\001B\211\001\n\035com.factset.protobuf" +
      ".stach.v3B\016TableViewProtoZ<github.com/fa" +
      "ctset/stachschema-sdks/go/fds/protobuf/s" +
      "tach/v3\252\002\031FactSet.Protobuf.Stach.V3b\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.factset.protobuf.stach.v3.MetadataItemProto.getDescriptor(),
        });
    internal_static_factset_protobuf_stach_v3_TableView_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_factset_protobuf_stach_v3_TableView_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_TableView_descriptor,
        new java.lang.String[] { "DisplayName", "Columns", "Headers", "Group", "Split", "CustomMetadata", });
    internal_static_factset_protobuf_stach_v3_TableView_Group_descriptor =
      internal_static_factset_protobuf_stach_v3_TableView_descriptor.getNestedTypes().get(0);
    internal_static_factset_protobuf_stach_v3_TableView_Group_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_TableView_Group_descriptor,
        new java.lang.String[] { "By", "CollapsedColumn", });
    internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_descriptor =
      internal_static_factset_protobuf_stach_v3_TableView_descriptor.getNestedTypes().get(1);
    internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_TableView_CollapsedColumn_descriptor,
        new java.lang.String[] { "Alias", });
    internal_static_factset_protobuf_stach_v3_TableView_Split_descriptor =
      internal_static_factset_protobuf_stach_v3_TableView_descriptor.getNestedTypes().get(2);
    internal_static_factset_protobuf_stach_v3_TableView_Split_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_TableView_Split_descriptor,
        new java.lang.String[] { "Alias", "By", "Include", "Over", "Headers", "RemoveEmptySplitColumns", });
    internal_static_factset_protobuf_stach_v3_TableView_Split_HeadersEntry_descriptor =
      internal_static_factset_protobuf_stach_v3_TableView_Split_descriptor.getNestedTypes().get(0);
    internal_static_factset_protobuf_stach_v3_TableView_Split_HeadersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_TableView_Split_HeadersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_factset_protobuf_stach_v3_TableView_HeadersEntry_descriptor =
      internal_static_factset_protobuf_stach_v3_TableView_descriptor.getNestedTypes().get(3);
    internal_static_factset_protobuf_stach_v3_TableView_HeadersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_TableView_HeadersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_factset_protobuf_stach_v3_TableView_CustomMetadataEntry_descriptor =
      internal_static_factset_protobuf_stach_v3_TableView_descriptor.getNestedTypes().get(4);
    internal_static_factset_protobuf_stach_v3_TableView_CustomMetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_TableView_CustomMetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.factset.protobuf.stach.v3.MetadataItemProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
