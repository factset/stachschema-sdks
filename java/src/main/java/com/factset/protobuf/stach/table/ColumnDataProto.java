// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fds/protobuf/stach/table/ColumnData.proto

package com.factset.protobuf.stach.table;

public final class ColumnDataProto {
  private ColumnDataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ColumnDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:factset.protobuf.stach.table.ColumnData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */
    int getRangesCount();
    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */
    boolean containsRanges(
        int key);
    /**
     * Use {@link #getRangesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getRanges();
    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getRangesMap();
    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */

    int getRangesOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */

    int getRangesOrThrow(
        int key);

    /**
     * <pre>
     * The values
     * </pre>
     *
     * <code>.google.protobuf.ListValue values = 2;</code>
     * @return Whether the values field is set.
     */
    boolean hasValues();
    /**
     * <pre>
     * The values
     * </pre>
     *
     * <code>.google.protobuf.ListValue values = 2;</code>
     * @return The values.
     */
    com.google.protobuf.ListValue getValues();
    /**
     * <pre>
     * The values
     * </pre>
     *
     * <code>.google.protobuf.ListValue values = 2;</code>
     */
    com.google.protobuf.ListValueOrBuilder getValuesOrBuilder();

    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    java.util.List<com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition> 
        getDefinitionsList();
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition getDefinitions(int index);
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    int getDefinitionsCount();
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    java.util.List<? extends com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder> 
        getDefinitionsOrBuilderList();
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder getDefinitionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * An array of column data
   * The type chosen correlates to the data type of the `ColumnDefinition.type`
   * </pre>
   *
   * Protobuf type {@code factset.protobuf.stach.table.ColumnData}
   */
  public static final class ColumnData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:factset.protobuf.stach.table.ColumnData)
      ColumnDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ColumnData.newBuilder() to construct.
    private ColumnData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ColumnData() {
      definitions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ColumnData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ColumnData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                ranges_ = com.google.protobuf.MapField.newMapField(
                    RangesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              ranges__ = input.readMessage(
                  RangesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              ranges_.getMutableMap().put(
                  ranges__.getKey(), ranges__.getValue());
              break;
            }
            case 18: {
              com.google.protobuf.ListValue.Builder subBuilder = null;
              if (values_ != null) {
                subBuilder = values_.toBuilder();
              }
              values_ = input.readMessage(com.google.protobuf.ListValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(values_);
                values_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                definitions_ = new java.util.ArrayList<com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition>();
                mutable_bitField0_ |= 0x00000002;
              }
              definitions_.add(
                  input.readMessage(com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          definitions_ = java.util.Collections.unmodifiableList(definitions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.factset.protobuf.stach.table.ColumnDataProto.internal_static_factset_protobuf_stach_table_ColumnData_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetRanges();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.factset.protobuf.stach.table.ColumnDataProto.internal_static_factset_protobuf_stach_table_ColumnData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.factset.protobuf.stach.table.ColumnDataProto.ColumnData.class, com.factset.protobuf.stach.table.ColumnDataProto.ColumnData.Builder.class);
    }

    public static final int RANGES_FIELD_NUMBER = 1;
    private static final class RangesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.factset.protobuf.stach.table.ColumnDataProto.internal_static_factset_protobuf_stach_table_ColumnData_RangesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> ranges_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetRanges() {
      if (ranges_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            RangesDefaultEntryHolder.defaultEntry);
      }
      return ranges_;
    }

    public int getRangesCount() {
      return internalGetRanges().getMap().size();
    }
    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */

    @java.lang.Override
    public boolean containsRanges(
        int key) {
      
      return internalGetRanges().getMap().containsKey(key);
    }
    /**
     * Use {@link #getRangesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getRanges() {
      return getRangesMap();
    }
    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getRangesMap() {
      return internalGetRanges().getMap();
    }
    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */
    @java.lang.Override

    public int getRangesOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetRanges().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The map (key: uncompressed index, value: length to repeat the value) used during compression
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; ranges = 1;</code>
     */
    @java.lang.Override

    public int getRangesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetRanges().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int VALUES_FIELD_NUMBER = 2;
    private com.google.protobuf.ListValue values_;
    /**
     * <pre>
     * The values
     * </pre>
     *
     * <code>.google.protobuf.ListValue values = 2;</code>
     * @return Whether the values field is set.
     */
    @java.lang.Override
    public boolean hasValues() {
      return values_ != null;
    }
    /**
     * <pre>
     * The values
     * </pre>
     *
     * <code>.google.protobuf.ListValue values = 2;</code>
     * @return The values.
     */
    @java.lang.Override
    public com.google.protobuf.ListValue getValues() {
      return values_ == null ? com.google.protobuf.ListValue.getDefaultInstance() : values_;
    }
    /**
     * <pre>
     * The values
     * </pre>
     *
     * <code>.google.protobuf.ListValue values = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ListValueOrBuilder getValuesOrBuilder() {
      return getValues();
    }

    public static final int DEFINITIONS_FIELD_NUMBER = 3;
    private java.util.List<com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition> definitions_;
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition> getDefinitionsList() {
      return definitions_;
    }
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder> 
        getDefinitionsOrBuilderList() {
      return definitions_;
    }
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    @java.lang.Override
    public int getDefinitionsCount() {
      return definitions_.size();
    }
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    @java.lang.Override
    public com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition getDefinitions(int index) {
      return definitions_.get(index);
    }
    /**
     * <pre>
     * The cell definitions
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
     */
    @java.lang.Override
    public com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder getDefinitionsOrBuilder(
        int index) {
      return definitions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetRanges(),
          RangesDefaultEntryHolder.defaultEntry,
          1);
      if (values_ != null) {
        output.writeMessage(2, getValues());
      }
      for (int i = 0; i < definitions_.size(); i++) {
        output.writeMessage(3, definitions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetRanges().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        ranges__ = RangesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, ranges__);
      }
      if (values_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValues());
      }
      for (int i = 0; i < definitions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, definitions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.factset.protobuf.stach.table.ColumnDataProto.ColumnData)) {
        return super.equals(obj);
      }
      com.factset.protobuf.stach.table.ColumnDataProto.ColumnData other = (com.factset.protobuf.stach.table.ColumnDataProto.ColumnData) obj;

      if (!internalGetRanges().equals(
          other.internalGetRanges())) return false;
      if (hasValues() != other.hasValues()) return false;
      if (hasValues()) {
        if (!getValues()
            .equals(other.getValues())) return false;
      }
      if (!getDefinitionsList()
          .equals(other.getDefinitionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetRanges().getMap().isEmpty()) {
        hash = (37 * hash) + RANGES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetRanges().hashCode();
      }
      if (hasValues()) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValues().hashCode();
      }
      if (getDefinitionsCount() > 0) {
        hash = (37 * hash) + DEFINITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDefinitionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.factset.protobuf.stach.table.ColumnDataProto.ColumnData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An array of column data
     * The type chosen correlates to the data type of the `ColumnDefinition.type`
     * </pre>
     *
     * Protobuf type {@code factset.protobuf.stach.table.ColumnData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:factset.protobuf.stach.table.ColumnData)
        com.factset.protobuf.stach.table.ColumnDataProto.ColumnDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.factset.protobuf.stach.table.ColumnDataProto.internal_static_factset_protobuf_stach_table_ColumnData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetRanges();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableRanges();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.factset.protobuf.stach.table.ColumnDataProto.internal_static_factset_protobuf_stach_table_ColumnData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.factset.protobuf.stach.table.ColumnDataProto.ColumnData.class, com.factset.protobuf.stach.table.ColumnDataProto.ColumnData.Builder.class);
      }

      // Construct using com.factset.protobuf.stach.table.ColumnDataProto.ColumnData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDefinitionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableRanges().clear();
        if (valuesBuilder_ == null) {
          values_ = null;
        } else {
          values_ = null;
          valuesBuilder_ = null;
        }
        if (definitionsBuilder_ == null) {
          definitions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          definitionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.factset.protobuf.stach.table.ColumnDataProto.internal_static_factset_protobuf_stach_table_ColumnData_descriptor;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.table.ColumnDataProto.ColumnData getDefaultInstanceForType() {
        return com.factset.protobuf.stach.table.ColumnDataProto.ColumnData.getDefaultInstance();
      }

      @java.lang.Override
      public com.factset.protobuf.stach.table.ColumnDataProto.ColumnData build() {
        com.factset.protobuf.stach.table.ColumnDataProto.ColumnData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.table.ColumnDataProto.ColumnData buildPartial() {
        com.factset.protobuf.stach.table.ColumnDataProto.ColumnData result = new com.factset.protobuf.stach.table.ColumnDataProto.ColumnData(this);
        int from_bitField0_ = bitField0_;
        result.ranges_ = internalGetRanges();
        result.ranges_.makeImmutable();
        if (valuesBuilder_ == null) {
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        if (definitionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            definitions_ = java.util.Collections.unmodifiableList(definitions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.definitions_ = definitions_;
        } else {
          result.definitions_ = definitionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.factset.protobuf.stach.table.ColumnDataProto.ColumnData) {
          return mergeFrom((com.factset.protobuf.stach.table.ColumnDataProto.ColumnData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.factset.protobuf.stach.table.ColumnDataProto.ColumnData other) {
        if (other == com.factset.protobuf.stach.table.ColumnDataProto.ColumnData.getDefaultInstance()) return this;
        internalGetMutableRanges().mergeFrom(
            other.internalGetRanges());
        if (other.hasValues()) {
          mergeValues(other.getValues());
        }
        if (definitionsBuilder_ == null) {
          if (!other.definitions_.isEmpty()) {
            if (definitions_.isEmpty()) {
              definitions_ = other.definitions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDefinitionsIsMutable();
              definitions_.addAll(other.definitions_);
            }
            onChanged();
          }
        } else {
          if (!other.definitions_.isEmpty()) {
            if (definitionsBuilder_.isEmpty()) {
              definitionsBuilder_.dispose();
              definitionsBuilder_ = null;
              definitions_ = other.definitions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              definitionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDefinitionsFieldBuilder() : null;
            } else {
              definitionsBuilder_.addAllMessages(other.definitions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.factset.protobuf.stach.table.ColumnDataProto.ColumnData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.factset.protobuf.stach.table.ColumnDataProto.ColumnData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> ranges_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetRanges() {
        if (ranges_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              RangesDefaultEntryHolder.defaultEntry);
        }
        return ranges_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableRanges() {
        onChanged();;
        if (ranges_ == null) {
          ranges_ = com.google.protobuf.MapField.newMapField(
              RangesDefaultEntryHolder.defaultEntry);
        }
        if (!ranges_.isMutable()) {
          ranges_ = ranges_.copy();
        }
        return ranges_;
      }

      public int getRangesCount() {
        return internalGetRanges().getMap().size();
      }
      /**
       * <pre>
       * The map (key: uncompressed index, value: length to repeat the value) used during compression
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; ranges = 1;</code>
       */

      @java.lang.Override
      public boolean containsRanges(
          int key) {
        
        return internalGetRanges().getMap().containsKey(key);
      }
      /**
       * Use {@link #getRangesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getRanges() {
        return getRangesMap();
      }
      /**
       * <pre>
       * The map (key: uncompressed index, value: length to repeat the value) used during compression
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; ranges = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getRangesMap() {
        return internalGetRanges().getMap();
      }
      /**
       * <pre>
       * The map (key: uncompressed index, value: length to repeat the value) used during compression
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; ranges = 1;</code>
       */
      @java.lang.Override

      public int getRangesOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetRanges().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * The map (key: uncompressed index, value: length to repeat the value) used during compression
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; ranges = 1;</code>
       */
      @java.lang.Override

      public int getRangesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetRanges().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearRanges() {
        internalGetMutableRanges().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * The map (key: uncompressed index, value: length to repeat the value) used during compression
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; ranges = 1;</code>
       */

      public Builder removeRanges(
          int key) {
        
        internalGetMutableRanges().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableRanges() {
        return internalGetMutableRanges().getMutableMap();
      }
      /**
       * <pre>
       * The map (key: uncompressed index, value: length to repeat the value) used during compression
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; ranges = 1;</code>
       */
      public Builder putRanges(
          int key,
          int value) {
        
        
        internalGetMutableRanges().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * The map (key: uncompressed index, value: length to repeat the value) used during compression
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; ranges = 1;</code>
       */

      public Builder putAllRanges(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableRanges().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.ListValue values_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.ListValue, com.google.protobuf.ListValue.Builder, com.google.protobuf.ListValueOrBuilder> valuesBuilder_;
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       * @return Whether the values field is set.
       */
      public boolean hasValues() {
        return valuesBuilder_ != null || values_ != null;
      }
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       * @return The values.
       */
      public com.google.protobuf.ListValue getValues() {
        if (valuesBuilder_ == null) {
          return values_ == null ? com.google.protobuf.ListValue.getDefaultInstance() : values_;
        } else {
          return valuesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       */
      public Builder setValues(com.google.protobuf.ListValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          values_ = value;
          onChanged();
        } else {
          valuesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       */
      public Builder setValues(
          com.google.protobuf.ListValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          values_ = builderForValue.build();
          onChanged();
        } else {
          valuesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       */
      public Builder mergeValues(com.google.protobuf.ListValue value) {
        if (valuesBuilder_ == null) {
          if (values_ != null) {
            values_ =
              com.google.protobuf.ListValue.newBuilder(values_).mergeFrom(value).buildPartial();
          } else {
            values_ = value;
          }
          onChanged();
        } else {
          valuesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = null;
          onChanged();
        } else {
          values_ = null;
          valuesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       */
      public com.google.protobuf.ListValue.Builder getValuesBuilder() {
        
        onChanged();
        return getValuesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       */
      public com.google.protobuf.ListValueOrBuilder getValuesOrBuilder() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilder();
        } else {
          return values_ == null ?
              com.google.protobuf.ListValue.getDefaultInstance() : values_;
        }
      }
      /**
       * <pre>
       * The values
       * </pre>
       *
       * <code>.google.protobuf.ListValue values = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.ListValue, com.google.protobuf.ListValue.Builder, com.google.protobuf.ListValueOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.ListValue, com.google.protobuf.ListValue.Builder, com.google.protobuf.ListValueOrBuilder>(
                  getValues(),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      private java.util.List<com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition> definitions_ =
        java.util.Collections.emptyList();
      private void ensureDefinitionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          definitions_ = new java.util.ArrayList<com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition>(definitions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder> definitionsBuilder_;

      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public java.util.List<com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition> getDefinitionsList() {
        if (definitionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(definitions_);
        } else {
          return definitionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public int getDefinitionsCount() {
        if (definitionsBuilder_ == null) {
          return definitions_.size();
        } else {
          return definitionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition getDefinitions(int index) {
        if (definitionsBuilder_ == null) {
          return definitions_.get(index);
        } else {
          return definitionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder setDefinitions(
          int index, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition value) {
        if (definitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefinitionsIsMutable();
          definitions_.set(index, value);
          onChanged();
        } else {
          definitionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder setDefinitions(
          int index, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder builderForValue) {
        if (definitionsBuilder_ == null) {
          ensureDefinitionsIsMutable();
          definitions_.set(index, builderForValue.build());
          onChanged();
        } else {
          definitionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder addDefinitions(com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition value) {
        if (definitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefinitionsIsMutable();
          definitions_.add(value);
          onChanged();
        } else {
          definitionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder addDefinitions(
          int index, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition value) {
        if (definitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefinitionsIsMutable();
          definitions_.add(index, value);
          onChanged();
        } else {
          definitionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder addDefinitions(
          com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder builderForValue) {
        if (definitionsBuilder_ == null) {
          ensureDefinitionsIsMutable();
          definitions_.add(builderForValue.build());
          onChanged();
        } else {
          definitionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder addDefinitions(
          int index, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder builderForValue) {
        if (definitionsBuilder_ == null) {
          ensureDefinitionsIsMutable();
          definitions_.add(index, builderForValue.build());
          onChanged();
        } else {
          definitionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder addAllDefinitions(
          java.lang.Iterable<? extends com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition> values) {
        if (definitionsBuilder_ == null) {
          ensureDefinitionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, definitions_);
          onChanged();
        } else {
          definitionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder clearDefinitions() {
        if (definitionsBuilder_ == null) {
          definitions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          definitionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public Builder removeDefinitions(int index) {
        if (definitionsBuilder_ == null) {
          ensureDefinitionsIsMutable();
          definitions_.remove(index);
          onChanged();
        } else {
          definitionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder getDefinitionsBuilder(
          int index) {
        return getDefinitionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder getDefinitionsOrBuilder(
          int index) {
        if (definitionsBuilder_ == null) {
          return definitions_.get(index);  } else {
          return definitionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public java.util.List<? extends com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder> 
           getDefinitionsOrBuilderList() {
        if (definitionsBuilder_ != null) {
          return definitionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(definitions_);
        }
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder addDefinitionsBuilder() {
        return getDefinitionsFieldBuilder().addBuilder(
            com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.getDefaultInstance());
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder addDefinitionsBuilder(
          int index) {
        return getDefinitionsFieldBuilder().addBuilder(
            index, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.getDefaultInstance());
      }
      /**
       * <pre>
       * The cell definitions
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.table.CellDefinition definitions = 3;</code>
       */
      public java.util.List<com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder> 
           getDefinitionsBuilderList() {
        return getDefinitionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder> 
          getDefinitionsFieldBuilder() {
        if (definitionsBuilder_ == null) {
          definitionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinition.Builder, com.factset.protobuf.stach.table.CellDefinitionProto.CellDefinitionOrBuilder>(
                  definitions_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          definitions_ = null;
        }
        return definitionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:factset.protobuf.stach.table.ColumnData)
    }

    // @@protoc_insertion_point(class_scope:factset.protobuf.stach.table.ColumnData)
    private static final com.factset.protobuf.stach.table.ColumnDataProto.ColumnData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.factset.protobuf.stach.table.ColumnDataProto.ColumnData();
    }

    public static com.factset.protobuf.stach.table.ColumnDataProto.ColumnData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ColumnData>
        PARSER = new com.google.protobuf.AbstractParser<ColumnData>() {
      @java.lang.Override
      public ColumnData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ColumnData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ColumnData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ColumnData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.factset.protobuf.stach.table.ColumnDataProto.ColumnData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_table_ColumnData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_table_ColumnData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_table_ColumnData_RangesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_table_ColumnData_RangesEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)fds/protobuf/stach/table/ColumnData.pr" +
      "oto\022\034factset.protobuf.stach.table\032-fds/p" +
      "rotobuf/stach/table/CellDefinition.proto" +
      "\032\034google/protobuf/struct.proto\"\360\001\n\nColum" +
      "nData\022D\n\006ranges\030\001 \003(\01324.factset.protobuf" +
      ".stach.table.ColumnData.RangesEntry\022*\n\006v" +
      "alues\030\002 \001(\0132\032.google.protobuf.ListValue\022" +
      "A\n\013definitions\030\003 \003(\0132,.factset.protobuf." +
      "stach.table.CellDefinition\032-\n\013RangesEntr" +
      "y\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001B\221\001\n co" +
      "m.factset.protobuf.stach.tableB\017ColumnDa" +
      "taProtoZ=github.com/factset/stachschema/" +
      "go/v2/fds/protobuf/stach/table\252\002\034FactSet" +
      ".Protobuf.Stach.Tableb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.factset.protobuf.stach.table.CellDefinitionProto.getDescriptor(),
          com.google.protobuf.StructProto.getDescriptor(),
        });
    internal_static_factset_protobuf_stach_table_ColumnData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_factset_protobuf_stach_table_ColumnData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_table_ColumnData_descriptor,
        new java.lang.String[] { "Ranges", "Values", "Definitions", });
    internal_static_factset_protobuf_stach_table_ColumnData_RangesEntry_descriptor =
      internal_static_factset_protobuf_stach_table_ColumnData_descriptor.getNestedTypes().get(0);
    internal_static_factset_protobuf_stach_table_ColumnData_RangesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_table_ColumnData_RangesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.factset.protobuf.stach.table.CellDefinitionProto.getDescriptor();
    com.google.protobuf.StructProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
