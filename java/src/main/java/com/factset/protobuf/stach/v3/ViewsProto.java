// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fds/protobuf/stach/v3/Views.proto

package com.factset.protobuf.stach.v3;

public final class ViewsProto {
  private ViewsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ViewsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:factset.protobuf.stach.v3.Views)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    java.util.List<com.factset.protobuf.stach.v3.ViewsProto.Views.View> 
        getViewsList();
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    com.factset.protobuf.stach.v3.ViewsProto.Views.View getViews(int index);
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    int getViewsCount();
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    java.util.List<? extends com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder> 
        getViewsOrBuilderList();
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder getViewsOrBuilder(
        int index);
  }
  /**
   * <pre>
   *A set of a metadata specifying one or more views for rendering a table.
   * </pre>
   *
   * Protobuf type {@code factset.protobuf.stach.v3.Views}
   */
  public static final class Views extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:factset.protobuf.stach.v3.Views)
      ViewsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Views.newBuilder() to construct.
    private Views(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Views() {
      views_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Views();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Views(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                views_ = new java.util.ArrayList<com.factset.protobuf.stach.v3.ViewsProto.Views.View>();
                mutable_bitField0_ |= 0x00000001;
              }
              views_.add(
                  input.readMessage(com.factset.protobuf.stach.v3.ViewsProto.Views.View.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          views_ = java.util.Collections.unmodifiableList(views_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.factset.protobuf.stach.v3.ViewsProto.Views.class, com.factset.protobuf.stach.v3.ViewsProto.Views.Builder.class);
    }

    public interface ViewOrBuilder extends
        // @@protoc_insertion_point(interface_extends:factset.protobuf.stach.v3.Views.View)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *The name of the view.
       *Required.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       *The name of the view.
       *Required.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       *The display name that describes the type of view.
       *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 2;</code>
       * @return The displayName.
       */
      java.lang.String getDisplayName();
      /**
       * <pre>
       *The display name that describes the type of view.
       *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 2;</code>
       * @return The bytes for displayName.
       */
      com.google.protobuf.ByteString
          getDisplayNameBytes();

      /**
       * <pre>
       *The instructions to render tabular data into a rendered table.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
       * @return Whether the table field is set.
       */
      boolean hasTable();
      /**
       * <pre>
       *The instructions to render tabular data into a rendered table.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
       * @return The table.
       */
      com.factset.protobuf.stach.v3.TableViewProto.TableView getTable();
      /**
       * <pre>
       *The instructions to render tabular data into a rendered table.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
       */
      com.factset.protobuf.stach.v3.TableViewProto.TableViewOrBuilder getTableOrBuilder();

      public com.factset.protobuf.stach.v3.ViewsProto.Views.View.TypeCase getTypeCase();
    }
    /**
     * <pre>
     *A view for rendering a table.
     * </pre>
     *
     * Protobuf type {@code factset.protobuf.stach.v3.Views.View}
     */
    public static final class View extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:factset.protobuf.stach.v3.Views.View)
        ViewOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use View.newBuilder() to construct.
      private View(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private View() {
        name_ = "";
        displayName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new View();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private View(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                displayName_ = s;
                break;
              }
              case 26: {
                com.factset.protobuf.stach.v3.TableViewProto.TableView.Builder subBuilder = null;
                if (typeCase_ == 3) {
                  subBuilder = ((com.factset.protobuf.stach.v3.TableViewProto.TableView) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.factset.protobuf.stach.v3.TableViewProto.TableView.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.factset.protobuf.stach.v3.TableViewProto.TableView) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 3;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_View_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_View_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.factset.protobuf.stach.v3.ViewsProto.Views.View.class, com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder.class);
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;
      public enum TypeCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        TABLE(3),
        TYPE_NOT_SET(0);
        private final int value;
        private TypeCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TypeCase valueOf(int value) {
          return forNumber(value);
        }

        public static TypeCase forNumber(int value) {
          switch (value) {
            case 3: return TABLE;
            case 0: return TYPE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public TypeCase
      getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       *The name of the view.
       *Required.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       *The name of the view.
       *Required.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DISPLAY_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object displayName_;
      /**
       * <pre>
       *The display name that describes the type of view.
       *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 2;</code>
       * @return The displayName.
       */
      @java.lang.Override
      public java.lang.String getDisplayName() {
        java.lang.Object ref = displayName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          displayName_ = s;
          return s;
        }
      }
      /**
       * <pre>
       *The display name that describes the type of view.
       *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
       *Optional.
       * </pre>
       *
       * <code>string display_name = 2;</code>
       * @return The bytes for displayName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDisplayNameBytes() {
        java.lang.Object ref = displayName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          displayName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TABLE_FIELD_NUMBER = 3;
      /**
       * <pre>
       *The instructions to render tabular data into a rendered table.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
       * @return Whether the table field is set.
       */
      @java.lang.Override
      public boolean hasTable() {
        return typeCase_ == 3;
      }
      /**
       * <pre>
       *The instructions to render tabular data into a rendered table.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
       * @return The table.
       */
      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableView getTable() {
        if (typeCase_ == 3) {
           return (com.factset.protobuf.stach.v3.TableViewProto.TableView) type_;
        }
        return com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance();
      }
      /**
       * <pre>
       *The instructions to render tabular data into a rendered table.
       * </pre>
       *
       * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
       */
      @java.lang.Override
      public com.factset.protobuf.stach.v3.TableViewProto.TableViewOrBuilder getTableOrBuilder() {
        if (typeCase_ == 3) {
           return (com.factset.protobuf.stach.v3.TableViewProto.TableView) type_;
        }
        return com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(displayName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, displayName_);
        }
        if (typeCase_ == 3) {
          output.writeMessage(3, (com.factset.protobuf.stach.v3.TableViewProto.TableView) type_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(displayName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, displayName_);
        }
        if (typeCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, (com.factset.protobuf.stach.v3.TableViewProto.TableView) type_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.factset.protobuf.stach.v3.ViewsProto.Views.View)) {
          return super.equals(obj);
        }
        com.factset.protobuf.stach.v3.ViewsProto.Views.View other = (com.factset.protobuf.stach.v3.ViewsProto.Views.View) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (!getDisplayName()
            .equals(other.getDisplayName())) return false;
        if (!getTypeCase().equals(other.getTypeCase())) return false;
        switch (typeCase_) {
          case 3:
            if (!getTable()
                .equals(other.getTable())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + DISPLAY_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayName().hashCode();
        switch (typeCase_) {
          case 3:
            hash = (37 * hash) + TABLE_FIELD_NUMBER;
            hash = (53 * hash) + getTable().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.factset.protobuf.stach.v3.ViewsProto.Views.View prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *A view for rendering a table.
       * </pre>
       *
       * Protobuf type {@code factset.protobuf.stach.v3.Views.View}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:factset.protobuf.stach.v3.Views.View)
          com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_View_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_View_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.factset.protobuf.stach.v3.ViewsProto.Views.View.class, com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder.class);
        }

        // Construct using com.factset.protobuf.stach.v3.ViewsProto.Views.View.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";

          displayName_ = "";

          typeCase_ = 0;
          type_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_View_descriptor;
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.ViewsProto.Views.View getDefaultInstanceForType() {
          return com.factset.protobuf.stach.v3.ViewsProto.Views.View.getDefaultInstance();
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.ViewsProto.Views.View build() {
          com.factset.protobuf.stach.v3.ViewsProto.Views.View result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.factset.protobuf.stach.v3.ViewsProto.Views.View buildPartial() {
          com.factset.protobuf.stach.v3.ViewsProto.Views.View result = new com.factset.protobuf.stach.v3.ViewsProto.Views.View(this);
          result.name_ = name_;
          result.displayName_ = displayName_;
          if (typeCase_ == 3) {
            if (tableBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = tableBuilder_.build();
            }
          }
          result.typeCase_ = typeCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.factset.protobuf.stach.v3.ViewsProto.Views.View) {
            return mergeFrom((com.factset.protobuf.stach.v3.ViewsProto.Views.View)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.factset.protobuf.stach.v3.ViewsProto.Views.View other) {
          if (other == com.factset.protobuf.stach.v3.ViewsProto.Views.View.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (!other.getDisplayName().isEmpty()) {
            displayName_ = other.displayName_;
            onChanged();
          }
          switch (other.getTypeCase()) {
            case TABLE: {
              mergeTable(other.getTable());
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.factset.protobuf.stach.v3.ViewsProto.Views.View parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.factset.protobuf.stach.v3.ViewsProto.Views.View) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int typeCase_ = 0;
        private java.lang.Object type_;
        public TypeCase
            getTypeCase() {
          return TypeCase.forNumber(
              typeCase_);
        }

        public Builder clearType() {
          typeCase_ = 0;
          type_ = null;
          onChanged();
          return this;
        }


        private java.lang.Object name_ = "";
        /**
         * <pre>
         *The name of the view.
         *Required.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         *The name of the view.
         *Required.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *The name of the view.
         *Required.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The name of the view.
         *Required.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The name of the view.
         *Required.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object displayName_ = "";
        /**
         * <pre>
         *The display name that describes the type of view.
         *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
         *Optional.
         * </pre>
         *
         * <code>string display_name = 2;</code>
         * @return The displayName.
         */
        public java.lang.String getDisplayName() {
          java.lang.Object ref = displayName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            displayName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         *The display name that describes the type of view.
         *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
         *Optional.
         * </pre>
         *
         * <code>string display_name = 2;</code>
         * @return The bytes for displayName.
         */
        public com.google.protobuf.ByteString
            getDisplayNameBytes() {
          java.lang.Object ref = displayName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            displayName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *The display name that describes the type of view.
         *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
         *Optional.
         * </pre>
         *
         * <code>string display_name = 2;</code>
         * @param value The displayName to set.
         * @return This builder for chaining.
         */
        public Builder setDisplayName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          displayName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The display name that describes the type of view.
         *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
         *Optional.
         * </pre>
         *
         * <code>string display_name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDisplayName() {
          
          displayName_ = getDefaultInstance().getDisplayName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *The display name that describes the type of view.
         *This is used when presenting the user with a list of views that can be rendered. e.g. 'Table', 'Bubble Chart', etc.
         *Optional.
         * </pre>
         *
         * <code>string display_name = 2;</code>
         * @param value The bytes for displayName to set.
         * @return This builder for chaining.
         */
        public Builder setDisplayNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          displayName_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.factset.protobuf.stach.v3.TableViewProto.TableView, com.factset.protobuf.stach.v3.TableViewProto.TableView.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableViewOrBuilder> tableBuilder_;
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         * @return Whether the table field is set.
         */
        @java.lang.Override
        public boolean hasTable() {
          return typeCase_ == 3;
        }
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         * @return The table.
         */
        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableView getTable() {
          if (tableBuilder_ == null) {
            if (typeCase_ == 3) {
              return (com.factset.protobuf.stach.v3.TableViewProto.TableView) type_;
            }
            return com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance();
          } else {
            if (typeCase_ == 3) {
              return tableBuilder_.getMessage();
            }
            return com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance();
          }
        }
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         */
        public Builder setTable(com.factset.protobuf.stach.v3.TableViewProto.TableView value) {
          if (tableBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            tableBuilder_.setMessage(value);
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         */
        public Builder setTable(
            com.factset.protobuf.stach.v3.TableViewProto.TableView.Builder builderForValue) {
          if (tableBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            tableBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         */
        public Builder mergeTable(com.factset.protobuf.stach.v3.TableViewProto.TableView value) {
          if (tableBuilder_ == null) {
            if (typeCase_ == 3 &&
                type_ != com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance()) {
              type_ = com.factset.protobuf.stach.v3.TableViewProto.TableView.newBuilder((com.factset.protobuf.stach.v3.TableViewProto.TableView) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 3) {
              tableBuilder_.mergeFrom(value);
            } else {
              tableBuilder_.setMessage(value);
            }
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         */
        public Builder clearTable() {
          if (tableBuilder_ == null) {
            if (typeCase_ == 3) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 3) {
              typeCase_ = 0;
              type_ = null;
            }
            tableBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         */
        public com.factset.protobuf.stach.v3.TableViewProto.TableView.Builder getTableBuilder() {
          return getTableFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         */
        @java.lang.Override
        public com.factset.protobuf.stach.v3.TableViewProto.TableViewOrBuilder getTableOrBuilder() {
          if ((typeCase_ == 3) && (tableBuilder_ != null)) {
            return tableBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 3) {
              return (com.factset.protobuf.stach.v3.TableViewProto.TableView) type_;
            }
            return com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance();
          }
        }
        /**
         * <pre>
         *The instructions to render tabular data into a rendered table.
         * </pre>
         *
         * <code>.factset.protobuf.stach.v3.TableView table = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.factset.protobuf.stach.v3.TableViewProto.TableView, com.factset.protobuf.stach.v3.TableViewProto.TableView.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableViewOrBuilder> 
            getTableFieldBuilder() {
          if (tableBuilder_ == null) {
            if (!(typeCase_ == 3)) {
              type_ = com.factset.protobuf.stach.v3.TableViewProto.TableView.getDefaultInstance();
            }
            tableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.factset.protobuf.stach.v3.TableViewProto.TableView, com.factset.protobuf.stach.v3.TableViewProto.TableView.Builder, com.factset.protobuf.stach.v3.TableViewProto.TableViewOrBuilder>(
                    (com.factset.protobuf.stach.v3.TableViewProto.TableView) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 3;
          onChanged();;
          return tableBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:factset.protobuf.stach.v3.Views.View)
      }

      // @@protoc_insertion_point(class_scope:factset.protobuf.stach.v3.Views.View)
      private static final com.factset.protobuf.stach.v3.ViewsProto.Views.View DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.factset.protobuf.stach.v3.ViewsProto.Views.View();
      }

      public static com.factset.protobuf.stach.v3.ViewsProto.Views.View getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<View>
          PARSER = new com.google.protobuf.AbstractParser<View>() {
        @java.lang.Override
        public View parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new View(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<View> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<View> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.ViewsProto.Views.View getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int VIEWS_FIELD_NUMBER = 1;
    private java.util.List<com.factset.protobuf.stach.v3.ViewsProto.Views.View> views_;
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.factset.protobuf.stach.v3.ViewsProto.Views.View> getViewsList() {
      return views_;
    }
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder> 
        getViewsOrBuilderList() {
      return views_;
    }
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    @java.lang.Override
    public int getViewsCount() {
      return views_.size();
    }
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    @java.lang.Override
    public com.factset.protobuf.stach.v3.ViewsProto.Views.View getViews(int index) {
      return views_.get(index);
    }
    /**
     * <pre>
     *The views.
     *The first view is considered the default view when rendering the table.
     *Required.
     * </pre>
     *
     * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
     */
    @java.lang.Override
    public com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder getViewsOrBuilder(
        int index) {
      return views_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < views_.size(); i++) {
        output.writeMessage(1, views_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < views_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, views_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.factset.protobuf.stach.v3.ViewsProto.Views)) {
        return super.equals(obj);
      }
      com.factset.protobuf.stach.v3.ViewsProto.Views other = (com.factset.protobuf.stach.v3.ViewsProto.Views) obj;

      if (!getViewsList()
          .equals(other.getViewsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getViewsCount() > 0) {
        hash = (37 * hash) + VIEWS_FIELD_NUMBER;
        hash = (53 * hash) + getViewsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.factset.protobuf.stach.v3.ViewsProto.Views parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.factset.protobuf.stach.v3.ViewsProto.Views prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *A set of a metadata specifying one or more views for rendering a table.
     * </pre>
     *
     * Protobuf type {@code factset.protobuf.stach.v3.Views}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:factset.protobuf.stach.v3.Views)
        com.factset.protobuf.stach.v3.ViewsProto.ViewsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.factset.protobuf.stach.v3.ViewsProto.Views.class, com.factset.protobuf.stach.v3.ViewsProto.Views.Builder.class);
      }

      // Construct using com.factset.protobuf.stach.v3.ViewsProto.Views.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getViewsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (viewsBuilder_ == null) {
          views_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          viewsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.factset.protobuf.stach.v3.ViewsProto.internal_static_factset_protobuf_stach_v3_Views_descriptor;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.ViewsProto.Views getDefaultInstanceForType() {
        return com.factset.protobuf.stach.v3.ViewsProto.Views.getDefaultInstance();
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.ViewsProto.Views build() {
        com.factset.protobuf.stach.v3.ViewsProto.Views result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.factset.protobuf.stach.v3.ViewsProto.Views buildPartial() {
        com.factset.protobuf.stach.v3.ViewsProto.Views result = new com.factset.protobuf.stach.v3.ViewsProto.Views(this);
        int from_bitField0_ = bitField0_;
        if (viewsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            views_ = java.util.Collections.unmodifiableList(views_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.views_ = views_;
        } else {
          result.views_ = viewsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.factset.protobuf.stach.v3.ViewsProto.Views) {
          return mergeFrom((com.factset.protobuf.stach.v3.ViewsProto.Views)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.factset.protobuf.stach.v3.ViewsProto.Views other) {
        if (other == com.factset.protobuf.stach.v3.ViewsProto.Views.getDefaultInstance()) return this;
        if (viewsBuilder_ == null) {
          if (!other.views_.isEmpty()) {
            if (views_.isEmpty()) {
              views_ = other.views_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureViewsIsMutable();
              views_.addAll(other.views_);
            }
            onChanged();
          }
        } else {
          if (!other.views_.isEmpty()) {
            if (viewsBuilder_.isEmpty()) {
              viewsBuilder_.dispose();
              viewsBuilder_ = null;
              views_ = other.views_;
              bitField0_ = (bitField0_ & ~0x00000001);
              viewsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getViewsFieldBuilder() : null;
            } else {
              viewsBuilder_.addAllMessages(other.views_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.factset.protobuf.stach.v3.ViewsProto.Views parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.factset.protobuf.stach.v3.ViewsProto.Views) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.factset.protobuf.stach.v3.ViewsProto.Views.View> views_ =
        java.util.Collections.emptyList();
      private void ensureViewsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          views_ = new java.util.ArrayList<com.factset.protobuf.stach.v3.ViewsProto.Views.View>(views_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.factset.protobuf.stach.v3.ViewsProto.Views.View, com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder, com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder> viewsBuilder_;

      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public java.util.List<com.factset.protobuf.stach.v3.ViewsProto.Views.View> getViewsList() {
        if (viewsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(views_);
        } else {
          return viewsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public int getViewsCount() {
        if (viewsBuilder_ == null) {
          return views_.size();
        } else {
          return viewsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public com.factset.protobuf.stach.v3.ViewsProto.Views.View getViews(int index) {
        if (viewsBuilder_ == null) {
          return views_.get(index);
        } else {
          return viewsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder setViews(
          int index, com.factset.protobuf.stach.v3.ViewsProto.Views.View value) {
        if (viewsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewsIsMutable();
          views_.set(index, value);
          onChanged();
        } else {
          viewsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder setViews(
          int index, com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder builderForValue) {
        if (viewsBuilder_ == null) {
          ensureViewsIsMutable();
          views_.set(index, builderForValue.build());
          onChanged();
        } else {
          viewsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder addViews(com.factset.protobuf.stach.v3.ViewsProto.Views.View value) {
        if (viewsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewsIsMutable();
          views_.add(value);
          onChanged();
        } else {
          viewsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder addViews(
          int index, com.factset.protobuf.stach.v3.ViewsProto.Views.View value) {
        if (viewsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewsIsMutable();
          views_.add(index, value);
          onChanged();
        } else {
          viewsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder addViews(
          com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder builderForValue) {
        if (viewsBuilder_ == null) {
          ensureViewsIsMutable();
          views_.add(builderForValue.build());
          onChanged();
        } else {
          viewsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder addViews(
          int index, com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder builderForValue) {
        if (viewsBuilder_ == null) {
          ensureViewsIsMutable();
          views_.add(index, builderForValue.build());
          onChanged();
        } else {
          viewsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder addAllViews(
          java.lang.Iterable<? extends com.factset.protobuf.stach.v3.ViewsProto.Views.View> values) {
        if (viewsBuilder_ == null) {
          ensureViewsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, views_);
          onChanged();
        } else {
          viewsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder clearViews() {
        if (viewsBuilder_ == null) {
          views_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          viewsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public Builder removeViews(int index) {
        if (viewsBuilder_ == null) {
          ensureViewsIsMutable();
          views_.remove(index);
          onChanged();
        } else {
          viewsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder getViewsBuilder(
          int index) {
        return getViewsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder getViewsOrBuilder(
          int index) {
        if (viewsBuilder_ == null) {
          return views_.get(index);  } else {
          return viewsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public java.util.List<? extends com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder> 
           getViewsOrBuilderList() {
        if (viewsBuilder_ != null) {
          return viewsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(views_);
        }
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder addViewsBuilder() {
        return getViewsFieldBuilder().addBuilder(
            com.factset.protobuf.stach.v3.ViewsProto.Views.View.getDefaultInstance());
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder addViewsBuilder(
          int index) {
        return getViewsFieldBuilder().addBuilder(
            index, com.factset.protobuf.stach.v3.ViewsProto.Views.View.getDefaultInstance());
      }
      /**
       * <pre>
       *The views.
       *The first view is considered the default view when rendering the table.
       *Required.
       * </pre>
       *
       * <code>repeated .factset.protobuf.stach.v3.Views.View views = 1;</code>
       */
      public java.util.List<com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder> 
           getViewsBuilderList() {
        return getViewsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.factset.protobuf.stach.v3.ViewsProto.Views.View, com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder, com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder> 
          getViewsFieldBuilder() {
        if (viewsBuilder_ == null) {
          viewsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.factset.protobuf.stach.v3.ViewsProto.Views.View, com.factset.protobuf.stach.v3.ViewsProto.Views.View.Builder, com.factset.protobuf.stach.v3.ViewsProto.Views.ViewOrBuilder>(
                  views_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          views_ = null;
        }
        return viewsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:factset.protobuf.stach.v3.Views)
    }

    // @@protoc_insertion_point(class_scope:factset.protobuf.stach.v3.Views)
    private static final com.factset.protobuf.stach.v3.ViewsProto.Views DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.factset.protobuf.stach.v3.ViewsProto.Views();
    }

    public static com.factset.protobuf.stach.v3.ViewsProto.Views getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Views>
        PARSER = new com.google.protobuf.AbstractParser<Views>() {
      @java.lang.Override
      public Views parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Views(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Views> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Views> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.factset.protobuf.stach.v3.ViewsProto.Views getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_Views_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_Views_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_factset_protobuf_stach_v3_Views_View_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_factset_protobuf_stach_v3_Views_View_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!fds/protobuf/stach/v3/Views.proto\022\031fac" +
      "tset.protobuf.stach.v3\032%fds/protobuf/sta" +
      "ch/v3/TableView.proto\"\250\001\n\005Views\0224\n\005views" +
      "\030\001 \003(\0132%.factset.protobuf.stach.v3.Views" +
      ".View\032i\n\004View\022\014\n\004name\030\001 \001(\t\022\024\n\014display_n" +
      "ame\030\002 \001(\t\0225\n\005table\030\003 \001(\0132$.factset.proto" +
      "buf.stach.v3.TableViewH\000B\006\n\004typeB\205\001\n\035com" +
      ".factset.protobuf.stach.v3B\nViewsProtoZ<" +
      "github.com/factset/stachschema-sdks/go/f" +
      "ds/protobuf/stach/v3\252\002\031FactSet.Protobuf." +
      "Stach.V3b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.factset.protobuf.stach.v3.TableViewProto.getDescriptor(),
        });
    internal_static_factset_protobuf_stach_v3_Views_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_factset_protobuf_stach_v3_Views_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_Views_descriptor,
        new java.lang.String[] { "Views", });
    internal_static_factset_protobuf_stach_v3_Views_View_descriptor =
      internal_static_factset_protobuf_stach_v3_Views_descriptor.getNestedTypes().get(0);
    internal_static_factset_protobuf_stach_v3_Views_View_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_factset_protobuf_stach_v3_Views_View_descriptor,
        new java.lang.String[] { "Name", "DisplayName", "Table", "Type", });
    com.factset.protobuf.stach.v3.TableViewProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
